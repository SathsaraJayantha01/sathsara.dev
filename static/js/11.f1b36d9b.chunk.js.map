{"version":3,"file":"static/js/11.f1b36d9b.chunk.js","mappings":"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","sources":["../node_modules/tsparticles-particles.js/esm/marcbruederlin/Particles.js","../node_modules/tsparticles-particles.js/esm/VincentGarreau/particles.js","../node_modules/tsparticles-particles.js/esm/index.js","../node_modules/tsparticles-move-base/esm/Utils.js","../node_modules/tsparticles-move-base/esm/BaseMover.js","../node_modules/tsparticles-shape-circle/esm/CircleDrawer.js","../node_modules/tsparticles-updater-color/esm/Utils.js","../node_modules/tsparticles-updater-color/esm/ColorUpdater.js","../node_modules/tsparticles-updater-opacity/esm/OpacityUpdater.js","../node_modules/tsparticles-updater-opacity/esm/Utils.js","../node_modules/tsparticles-updater-out-modes/esm/BounceOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/Utils.js","../node_modules/tsparticles-updater-out-modes/esm/DestroyOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/NoneOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/OutOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/OutOfCanvasUpdater.js","../node_modules/tsparticles-updater-size/esm/SizeUpdater.js","../node_modules/tsparticles-updater-size/esm/Utils.js","../node_modules/tsparticles-basic/esm/index.js","../node_modules/tsparticles-move-base/esm/index.js","../node_modules/tsparticles-shape-circle/esm/index.js","../node_modules/tsparticles-updater-color/esm/index.js","../node_modules/tsparticles-updater-opacity/esm/index.js","../node_modules/tsparticles-updater-out-modes/esm/index.js","../node_modules/tsparticles-updater-size/esm/index.js","../node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js","../node_modules/tsparticles-interaction-external-attract/esm/Options/Classes/Attract.js","../node_modules/tsparticles-interaction-external-attract/esm/Attractor.js","../node_modules/tsparticles-interaction-external-bounce/esm/Options/Classes/Bounce.js","../node_modules/tsparticles-interaction-external-bounce/esm/Bouncer.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleBase.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleDiv.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/Bubble.js","../node_modules/tsparticles-interaction-external-bubble/esm/Utils.js","../node_modules/tsparticles-interaction-external-bubble/esm/Bubbler.js","../node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/ConnectLinks.js","../node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/Connect.js","../node_modules/tsparticles-interaction-external-connect/esm/Utils.js","../node_modules/tsparticles-interaction-external-connect/esm/Connector.js","../node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/GrabLinks.js","../node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/Grab.js","../node_modules/tsparticles-interaction-external-grab/esm/Utils.js","../node_modules/tsparticles-interaction-external-grab/esm/Grabber.js","../node_modules/tsparticles-interaction-external-pause/esm/Pauser.js","../node_modules/tsparticles-interaction-external-push/esm/Options/Classes/Push.js","../node_modules/tsparticles-interaction-external-push/esm/Pusher.js","../node_modules/tsparticles-interaction-external-remove/esm/Options/Classes/Remove.js","../node_modules/tsparticles-interaction-external-remove/esm/Remover.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseBase.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseDiv.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/Repulse.js","../node_modules/tsparticles-interaction-external-repulse/esm/Repulser.js","../node_modules/tsparticles-interaction-external-slow/esm/Options/Classes/Slow.js","../node_modules/tsparticles-interaction-external-slow/esm/Slower.js","../node_modules/tsparticles-shape-image/esm/GifUtils/Constants.js","../node_modules/tsparticles-shape-image/esm/GifUtils/ByteStream.js","../node_modules/tsparticles-shape-image/esm/GifUtils/Utils.js","../node_modules/tsparticles-shape-image/esm/Utils.js","../node_modules/tsparticles-shape-image/esm/ImageDrawer.js","../node_modules/tsparticles-shape-image/esm/Options/Classes/Preload.js","../node_modules/tsparticles-shape-image/esm/ImagePreloader.js","../node_modules/tsparticles-shape-image/esm/index.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDelay.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDuration.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/Life.js","../node_modules/tsparticles-updater-life/esm/LifeUpdater.js","../node_modules/tsparticles-shape-line/esm/LineDrawer.js","../node_modules/tsparticles-move-parallax/esm/ParallaxMover.js","../node_modules/tsparticles-engine/esm/Core/Utils/ParticlesInteractorBase.js","../node_modules/tsparticles-interaction-particles-attract/esm/Attractor.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Absorb.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Bounce.js","../node_modules/tsparticles-interaction-particles-collisions/esm/ResolveCollision.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Destroy.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Collider.js","../node_modules/tsparticles-interaction-particles-links/esm/CircleWarp.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksShadow.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksTriangle.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/Links.js","../node_modules/tsparticles-interaction-particles-links/esm/Linker.js","../node_modules/tsparticles-interaction-particles-links/esm/Utils.js","../node_modules/tsparticles-interaction-particles-links/esm/LinkInstance.js","../node_modules/tsparticles-interaction-particles-links/esm/plugin.js","../node_modules/tsparticles-interaction-particles-links/esm/index.js","../node_modules/tsparticles-interaction-particles-links/esm/interaction.js","../node_modules/tsparticles-shape-polygon/esm/PolygonDrawerBase.js","../node_modules/tsparticles-shape-polygon/esm/PolygonDrawer.js","../node_modules/tsparticles-shape-polygon/esm/TriangleDrawer.js","../node_modules/tsparticles-shape-polygon/esm/index.js","../node_modules/tsparticles-updater-rotate/esm/Options/Classes/RotateAnimation.js","../node_modules/tsparticles-updater-rotate/esm/Options/Classes/Rotate.js","../node_modules/tsparticles-updater-rotate/esm/RotateUpdater.js","../node_modules/tsparticles-shape-square/esm/SquareDrawer.js","../node_modules/tsparticles-shape-star/esm/StarDrawer.js","../node_modules/tsparticles-updater-stroke-color/esm/Utils.js","../node_modules/tsparticles-updater-stroke-color/esm/StrokeColorUpdater.js","../node_modules/tsparticles-shape-text/esm/TextDrawer.js","../node_modules/tsparticles-slim/esm/index.js","../node_modules/tsparticles-move-parallax/esm/index.js","../node_modules/tsparticles-interaction-external-attract/esm/index.js","../node_modules/tsparticles-interaction-external-bounce/esm/index.js","../node_modules/tsparticles-interaction-external-bubble/esm/index.js","../node_modules/tsparticles-interaction-external-connect/esm/index.js","../node_modules/tsparticles-interaction-external-grab/esm/index.js","../node_modules/tsparticles-interaction-external-pause/esm/index.js","../node_modules/tsparticles-interaction-external-push/esm/index.js","../node_modules/tsparticles-interaction-external-remove/esm/index.js","../node_modules/tsparticles-interaction-external-repulse/esm/index.js","../node_modules/tsparticles-interaction-external-slow/esm/index.js","../node_modules/tsparticles-interaction-particles-attract/esm/index.js","../node_modules/tsparticles-interaction-particles-collisions/esm/index.js","../node_modules/tsparticles-plugin-easing-quad/esm/index.js","../node_modules/tsparticles-shape-line/esm/index.js","../node_modules/tsparticles-shape-square/esm/index.js","../node_modules/tsparticles-shape-star/esm/index.js","../node_modules/tsparticles-shape-text/esm/index.js","../node_modules/tsparticles-updater-life/esm/index.js","../node_modules/tsparticles-updater-rotate/esm/index.js","../node_modules/tsparticles-updater-stroke-color/esm/index.js","../node_modules/tsparticles-engine/esm/Options/Classes/AnimationOptions.js","../node_modules/tsparticles-engine/esm/Core/Utils/Circle.js","../node_modules/tsparticles-engine/esm/Utils/ColorUtils.js","../node_modules/tsparticles-engine/esm/Core/Utils/Range.js","../node_modules/tsparticles-engine/esm/Utils/NumberUtils.js","../node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js","../node_modules/tsparticles-engine/esm/Core/Canvas.js","../node_modules/tsparticles-engine/esm/Core/Utils/EventListeners.js","../node_modules/tsparticles-engine/esm/Options/Classes/Background/Background.js","../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMaskCover.js","../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMask.js","../node_modules/tsparticles-engine/esm/Options/Classes/FullScreen/FullScreen.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ClickEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/DivEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Parallax.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/HoverEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ResizeEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Events.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Modes/Modes.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js","../node_modules/tsparticles-engine/esm/Options/Classes/ManualParticle.js","../node_modules/tsparticles-engine/esm/Options/Classes/Responsive.js","../node_modules/tsparticles-engine/esm/Options/Classes/Theme/ThemeDefault.js","../node_modules/tsparticles-engine/esm/Options/Classes/Theme/Theme.js","../node_modules/tsparticles-engine/esm/Options/Classes/ColorAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/HslAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/AnimatableColor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsOverlap.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounce.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/Collisions.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAngle.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAttract.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveCenter.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveGravity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Path/MovePath.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrailFill.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrail.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/OutModes.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Spin.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/OpacityAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/Opacity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesDensity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesNumber.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shadow.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/SizeAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/Size.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Stroke.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ZIndex/ZIndex.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ParticlesOptions.js","../node_modules/tsparticles-engine/esm/Utils/OptionsUtils.js","../node_modules/tsparticles-engine/esm/Options/Classes/Options.js","../node_modules/tsparticles-engine/esm/Core/Utils/InteractionManager.js","../node_modules/tsparticles-engine/esm/Core/Particle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Point.js","../node_modules/tsparticles-engine/esm/Core/Utils/QuadTree.js","../node_modules/tsparticles-engine/esm/Core/Particles.js","../node_modules/tsparticles-engine/esm/Core/Retina.js","../node_modules/tsparticles-engine/esm/Core/Container.js","../node_modules/tsparticles-engine/esm/Utils/EventDispatcher.js","../node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js","../node_modules/tsparticles-engine/esm/Core/Engine.js","../node_modules/tsparticles-engine/esm/Utils/HslColorManager.js","../node_modules/tsparticles-engine/esm/Utils/RgbColorManager.js","../node_modules/tsparticles-engine/esm/index.js","../node_modules/tsparticles-engine/esm/init.js","../node_modules/tsparticles-engine/esm/Core/Utils/Constants.js","../node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js","../node_modules/tsparticles-engine/esm/Core/Utils/Vector.js","../node_modules/tsparticles-engine/esm/Utils/Utils.js","../node_modules/tsparticles-engine/esm/Options/Classes/Random.js","../node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js","../node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js","../node_modules/react-particles/esm/Utils.js","../node_modules/react-particles/esm/Particles.js","../node_modules/react-particles/esm/index.js","../node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js"],"sourcesContent":["import { tsParticles } from \"tsparticles-engine\";\nexport class Particles {\n    static init(options) {\n        const particles = new Particles(), selector = options.selector;\n        if (!selector) {\n            throw new Error(\"No selector provided\");\n        }\n        const el = document.querySelector(selector);\n        if (!el) {\n            throw new Error(\"No element found for selector\");\n        }\n        tsParticles\n            .set(selector.replace(\".\", \"\").replace(\"!\", \"\"), el, {\n            fullScreen: {\n                enable: false,\n            },\n            particles: {\n                color: {\n                    value: options.color ?? \"!000000\",\n                },\n                links: {\n                    color: \"random\",\n                    distance: options.minDistance ?? 120,\n                    enable: options.connectParticles ?? false,\n                },\n                move: {\n                    enable: true,\n                    speed: options.speed ?? 0.5,\n                },\n                number: {\n                    value: options.maxParticles ?? 100,\n                },\n                size: {\n                    value: { min: 1, max: options.sizeVariations ?? 3 },\n                },\n            },\n            responsive: options.responsive?.map((responsive) => ({\n                maxWidth: responsive.breakpoint,\n                options: {\n                    particles: {\n                        color: {\n                            value: responsive.options?.color,\n                        },\n                        links: {\n                            distance: responsive.options?.minDistance,\n                            enable: responsive.options?.connectParticles,\n                        },\n                        number: {\n                            value: options.maxParticles,\n                        },\n                        move: {\n                            enable: true,\n                            speed: responsive.options?.speed,\n                        },\n                        size: {\n                            value: responsive.options?.sizeVariations,\n                        },\n                    },\n                },\n            })),\n        })\n            .then((container) => {\n            particles._container = container;\n        });\n        return particles;\n    }\n    destroy() {\n        const container = this._container;\n        container && container.destroy();\n    }\n    pauseAnimation() {\n        const container = this._container;\n        container && container.pause();\n    }\n    resumeAnimation() {\n        const container = this._container;\n        container && container.play();\n    }\n}\n","const initParticlesJS = (engine) => {\n    const particlesJS = (tagId, options) => {\n        return engine.load(tagId, options);\n    };\n    particlesJS.load = (tagId, pathConfigJson, callback) => {\n        engine\n            .loadJSON(tagId, pathConfigJson)\n            .then((container) => {\n            if (container) {\n                callback(container);\n            }\n        })\n            .catch(() => {\n            callback(undefined);\n        });\n    };\n    particlesJS.setOnClickHandler = (callback) => {\n        engine.setOnClickHandler(callback);\n    };\n    const pJSDom = engine.dom();\n    return { particlesJS, pJSDom };\n};\nexport { initParticlesJS };\n","import { Particles } from \"./marcbruederlin/Particles\";\nimport { initParticlesJS } from \"./VincentGarreau/particles\";\nconst initPjs = (engine) => {\n    const { particlesJS, pJSDom } = initParticlesJS(engine);\n    window.particlesJS = particlesJS;\n    window.pJSDom = pJSDom;\n    window.Particles = Particles;\n    return { particlesJS, pJSDom, Particles };\n};\nexport { initPjs };\n","import { clamp, getDistances, getRandom, } from \"tsparticles-engine\";\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), { maxDistance } = particle.retina, hDistance = maxDistance.horizontal, vDistance = maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    if (((hDistance && dxFixed >= hDistance) || (vDistance && dyFixed >= vDistance)) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance && ((pos.x < initialPosition.x && vel.x < 0) || (pos.x > initialPosition.x && vel.x > 0))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance && ((pos.y < initialPosition.y && vel.y < 0) || (pos.y > initialPosition.y && vel.y > 0))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta) {\n    applyPath(particle, delta);\n    const gravityOptions = particle.gravity, gravityFactor = gravityOptions?.enable && gravityOptions.inverse ? -1 : 1;\n    if (moveDrift && moveSpeed) {\n        particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n    }\n    if (gravityOptions?.enable && moveSpeed) {\n        particle.velocity.y += (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (60 * moveSpeed);\n    }\n    const decay = particle.moveDecay;\n    particle.velocity.multTo(decay);\n    const velocity = particle.velocity.mult(moveSpeed);\n    if (gravityOptions?.enable &&\n        maxSpeed > 0 &&\n        ((!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed) ||\n            (gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed))) {\n        velocity.y = gravityFactor * maxSpeed;\n        if (moveSpeed) {\n            particle.velocity.y = velocity.y / moveSpeed;\n        }\n    }\n    const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n    velocity.multTo(zVelocityFactor);\n    const { position } = particle;\n    position.addTo(velocity);\n    if (moveOptions.vibrate) {\n        position.x += Math.sin(position.x * Math.cos(position.y));\n        position.y += Math.cos(position.y * Math.sin(position.x));\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const updateFunc = {\n        x: particle.spin.direction === \"clockwise\" ? Math.cos : Math.sin,\n        y: particle.spin.direction === \"clockwise\" ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height);\n    if (particle.spin.radius > maxCanvasSize / 2) {\n        particle.spin.radius = maxCanvasSize / 2;\n        particle.spin.acceleration *= -1;\n    }\n    else if (particle.spin.radius < 0) {\n        particle.spin.radius = 0;\n        particle.spin.acceleration *= -1;\n    }\n    particle.spin.angle += (moveSpeed / 100) * (1 - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = particle.pathGenerator?.generate(particle, delta);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -1, 1);\n        particle.velocity.y = clamp(particle.velocity.y, -1, 1);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : 1;\n}\n","import { getDistance, getRangeMax, getRangeValue, } from \"tsparticles-engine\";\nimport { applyDistance, getProximitySpeedFactor, move, spin } from \"./Utils\";\nconst diffFactor = 2;\nexport class BaseMover {\n    constructor() {\n        this._initSpin = (particle) => {\n            const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n            if (!spinOptions.enable) {\n                return;\n            }\n            const spinPos = spinOptions.position ?? { x: 50, y: 50 }, spinCenter = {\n                x: (spinPos.x / 100) * container.canvas.size.width,\n                y: (spinPos.y / 100) * container.canvas.size.height,\n            }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n            particle.spin = {\n                center: spinCenter,\n                direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n                angle: particle.velocity.angle,\n                radius: distance,\n                acceleration: particle.retina.spinAcceleration,\n            };\n        };\n    }\n    init(particle) {\n        const options = particle.options, gravityOptions = options.move.gravity;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        this._initSpin(particle);\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, pxRatio = container.retina.pixelRatio, slowFactor = getProximitySpeedFactor(particle), baseSpeed = (particle.retina.moveSpeed ??= getRangeValue(moveOptions.speed) * pxRatio) *\n            container.retina.reduceFactor, moveDrift = (particle.retina.moveDrift ??= getRangeValue(particle.options.move.drift) * pxRatio), maxSize = getRangeMax(particleOptions.size.value) * pxRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, moveSpeed = (baseSpeed * sizeFactor * slowFactor * (delta.factor || 1)) / diffFactor, maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n        }\n        applyDistance(particle);\n    }\n}\n","import { isObject } from \"tsparticles-engine\";\nexport class CircleDrawer {\n    draw(context, particle, radius) {\n        if (!particle.circleRange) {\n            particle.circleRange = { min: 0, max: Math.PI * 2 };\n        }\n        const circleRange = particle.circleRange;\n        context.arc(0, 0, radius, circleRange.min, circleRange.max, false);\n    }\n    getSidesCount() {\n        return 12;\n    }\n    particleInit(container, particle) {\n        const shapeData = particle.shapeData, angle = shapeData?.angle ?? {\n            max: 360,\n            min: 0,\n        };\n        particle.circleRange = !isObject(angle)\n            ? {\n                min: 0,\n                max: (angle * Math.PI) / 180,\n            }\n            : { min: (angle.min * Math.PI) / 180, max: (angle.max * Math.PI) / 180 };\n    }\n}\n","import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateColor(particle, delta) {\n    const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n    if (!color) {\n        return;\n    }\n    const { h, s, l } = color;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n","import { getHslAnimationFromHsl, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { updateColor } from \"./Utils\";\nexport class ColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((color?.h.value !== undefined && hAnimation.enable) ||\n                (color?.s.value !== undefined && sAnimation.enable) ||\n                (color?.l.value !== undefined && lAnimation.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle, delta);\n    }\n}\n","import { getRandom, getRangeValue, initParticleNumericAnimationValue, } from \"tsparticles-engine\";\nimport { updateOpacity } from \"./Utils\";\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity;\n        particle.opacity = initParticleNumericAnimationValue(opacityOptions, 1);\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / 100) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            ((particle.opacity.maxLoops ?? 0) <= 0 ||\n                ((particle.opacity.maxLoops ?? 0) > 0 &&\n                    (particle.opacity.loops ?? 0) < (particle.opacity.maxLoops ?? 0))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.time = 0;\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateOpacity(particle, delta);\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.opacity.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateOpacity(particle, delta) {\n    const data = particle.opacity;\n    if (particle.destroyed || !data?.enable || ((data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0))) {\n        return;\n    }\n    const minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value >= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value <= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n    }\n    if (data.velocity && data.decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","import { calculateBounds, } from \"tsparticles-engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            \"bounce\",\n            \"bounce-vertical\",\n            \"bounce-horizontal\",\n            \"bounceVertical\",\n            \"bounceHorizontal\",\n            \"split\",\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n","import { getValue } from \"tsparticles-engine\";\nexport function bounceHorizontal(data) {\n    if ((data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-horizontal\" &&\n        data.outMode !== \"bounceHorizontal\" &&\n        data.outMode !== \"split\") ||\n        (data.direction !== \"left\" && data.direction !== \"right\")) {\n        return;\n    }\n    if (data.bounds.right < 0 && data.direction === \"left\") {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width && data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === \"right\" && data.bounds.right >= data.canvasSize.width && velocity > 0) ||\n        (data.direction === \"left\" && data.bounds.left <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.horizontal);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width && data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= 0 && data.direction === \"left\") {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if ((data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-vertical\" &&\n        data.outMode !== \"bounceVertical\" &&\n        data.outMode !== \"split\") ||\n        (data.direction !== \"bottom\" && data.direction !== \"top\")) {\n        return;\n    }\n    if (data.bounds.bottom < 0 && data.direction === \"top\") {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height && data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === \"bottom\" && data.bounds.bottom >= data.canvasSize.height && velocity > 0) ||\n        (data.direction === \"top\" && data.bounds.top <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.vertical);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height && data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= 0 && data.direction === \"top\") {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\n","import { Vector, getDistances, isPointInside, } from \"tsparticles-engine\";\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"destroy\"];\n    }\n    update(particle, direction, _delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"normal\":\n            case \"outside\":\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case \"inside\": {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                const { x: vx, y: vy } = particle.velocity;\n                if ((vx < 0 && dx > particle.moveCenter.radius) ||\n                    (vy < 0 && dy > particle.moveCenter.radius) ||\n                    (vx >= 0 && dx < -particle.moveCenter.radius) ||\n                    (vy >= 0 && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, undefined, true);\n    }\n}\n","import { Vector, isPointInside, } from \"tsparticles-engine\";\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"none\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === \"left\" || direction === \"right\")) ||\n            (particle.options.move.distance.vertical &&\n                (direction === \"top\" || direction === \"bottom\"))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container;\n        const canvasSize = container.canvas.size;\n        const pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > 0 && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < 0 && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > 0 && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < 0 && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === \"bottom\") ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === \"top\")) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n","import { Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"tsparticles-engine\";\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"out\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"inside\": {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= 0 && dx >= 0) || (vy <= 0 && dy >= 0) || (vx >= 0 && dx <= 0) || (vy >= 0 && dy <= 0)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case \"outside\": {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case \"normal\": {\n                        const wrap = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === \"right\" &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === \"left\" && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === \"bottom\" &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === \"top\" && nextBounds.bottom < -particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n","import { BounceOutMode } from \"./BounceOutMode\";\nimport { DestroyOutMode } from \"./DestroyOutMode\";\nimport { NoneOutMode } from \"./NoneOutMode\";\nimport { OutOutMode } from \"./OutOutMode\";\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this.container = container;\n        this._updateOutMode = (particle, delta, outMode, direction) => {\n            for (const updater of this.updaters) {\n                updater.update(particle, direction, delta, outMode);\n            }\n        };\n        this.updaters = [\n            new BounceOutMode(container),\n            new DestroyOutMode(container),\n            new OutOutMode(container),\n            new NoneOutMode(container),\n        ];\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        const outModes = particle.options.move.outModes;\n        this._updateOutMode(particle, delta, outModes.bottom ?? outModes.default, \"bottom\");\n        this._updateOutMode(particle, delta, outModes.left ?? outModes.default, \"left\");\n        this._updateOutMode(particle, delta, outModes.right ?? outModes.default, \"right\");\n        this._updateOutMode(particle, delta, outModes.top ?? outModes.default, \"top\");\n    }\n}\n","import { getRandom } from \"tsparticles-engine\";\nimport { updateSize } from \"./Utils\";\nexport class SizeUpdater {\n    init(particle) {\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                ((particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            ((particle.size.maxLoops ?? 0) <= 0 ||\n                ((particle.size.maxLoops ?? 0) > 0 && (particle.size.loops ?? 0) < (particle.size.maxLoops ?? 0))));\n    }\n    reset(particle) {\n        particle.size.loops = 0;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateSize(particle, delta);\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.size.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateSize(particle, delta) {\n    const data = particle.size;\n    if (particle.destroyed ||\n        !data ||\n        !data.enable ||\n        ((data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0))) {\n        return;\n    }\n    const sizeVelocity = (data.velocity ?? 0) * delta.factor, minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value >= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += sizeVelocity;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value <= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= sizeVelocity;\n            }\n    }\n    if (data.velocity && decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","import { loadBaseMover } from \"tsparticles-move-base\";\nimport { loadCircleShape } from \"tsparticles-shape-circle\";\nimport { loadColorUpdater } from \"tsparticles-updater-color\";\nimport { loadOpacityUpdater } from \"tsparticles-updater-opacity\";\nimport { loadOutModesUpdater } from \"tsparticles-updater-out-modes\";\nimport { loadSizeUpdater } from \"tsparticles-updater-size\";\nexport async function loadBasic(engine, refresh = true) {\n    await loadBaseMover(engine, false);\n    await loadCircleShape(engine, false);\n    await loadColorUpdater(engine, false);\n    await loadOpacityUpdater(engine, false);\n    await loadOutModesUpdater(engine, false);\n    await loadSizeUpdater(engine, false);\n    await engine.refresh(refresh);\n}\n","import { BaseMover } from \"./BaseMover\";\nexport async function loadBaseMover(engine, refresh = true) {\n    await engine.addMover(\"base\", () => new BaseMover(), refresh);\n}\n","import { CircleDrawer } from \"./CircleDrawer\";\nexport async function loadCircleShape(engine, refresh = true) {\n    await engine.addShape(\"circle\", new CircleDrawer(), refresh);\n}\n","import { ColorUpdater } from \"./ColorUpdater\";\nexport async function loadColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"color\", (container) => new ColorUpdater(container), refresh);\n}\n","import { OpacityUpdater } from \"./OpacityUpdater\";\nexport async function loadOpacityUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"opacity\", (container) => new OpacityUpdater(container), refresh);\n}\n","import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater\";\nexport async function loadOutModesUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"outModes\", (container) => new OutOfCanvasUpdater(container), refresh);\n}\n","import { SizeUpdater } from \"./SizeUpdater\";\nexport async function loadSizeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"size\", () => new SizeUpdater(), refresh);\n}\n","export class ExternalInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"external\";\n    }\n}\n","export class Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.easing = \"ease-out-quad\";\n        this.factor = 1;\n        this.maxSpeed = 50;\n        this.speed = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Vector, clamp, getDistances, getEasing, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Attract } from \"./Options/Classes/Attract\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickAttract = () => {\n            const container = this.container;\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            const { attract } = container;\n            if (!attract.finish) {\n                if (!attract.count) {\n                    attract.count = 0;\n                }\n                attract.count++;\n                if (attract.count === container.particles.count) {\n                    attract.finish = true;\n                }\n            }\n            if (attract.clicking) {\n                const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n                if (!attractRadius || attractRadius < 0 || !mousePos) {\n                    return;\n                }\n                this._processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n            }\n            else if (attract.clicking === false) {\n                attract.particles = [];\n            }\n            return;\n        };\n        this._hoverAttract = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n            if (!attractRadius || attractRadius < 0 || !mousePos) {\n                return;\n            }\n            this._processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n        };\n        this._processAttract = (position, attractRadius, area) => {\n            const container = this.container, attractOptions = container.actualOptions.interactivity.modes.attract;\n            if (!attractOptions) {\n                return;\n            }\n            const query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position);\n                const velocity = attractOptions.speed * attractOptions.factor;\n                const attractFactor = clamp(getEasing(attractOptions.easing)(1 - distance / attractRadius) * velocity, 0, attractOptions.maxSpeed);\n                const normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n                particle.position.subFrom(normVec);\n            }\n        };\n        this._engine = engine;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;\n            if (!attract || mode !== \"attract\") {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                if (!container.attract) {\n                    container.attract = { particles: [] };\n                }\n                container.attract.clicking = false;\n            }, attract.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;\n        if (!attract) {\n            return;\n        }\n        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n            this._hoverAttract();\n        }\n        else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n            this._clickAttract();\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.attract) {\n            options.attract = new Attract();\n        }\n        for (const source of sources) {\n            options.attract.load(source?.attract);\n        }\n    }\n    reset() {\n    }\n}\n","export class Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, isDivModeEnabled, isInArray, mouseMoveEvent, rectBounce, } from \"tsparticles-engine\";\nimport { Bounce } from \"./Options/Classes/Bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._processBounce = (position, radius, area) => {\n            const query = this.container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                if (area instanceof Circle) {\n                    circleBounce(circleBounceDataFromParticle(particle), {\n                        position,\n                        radius,\n                        mass: (radius ** 2 * Math.PI) / 2,\n                        velocity: Vector.origin,\n                        factor: Vector.origin,\n                    });\n                }\n                else if (area instanceof Rectangle) {\n                    rectBounce(particle, calculateBounds(position, radius));\n                }\n            }\n        };\n        this._processMouseBounce = () => {\n            const container = this.container, pxRatio = container.retina.pixelRatio, tolerance = 10 * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n            if (!radius || radius < 0 || !mousePos) {\n                return;\n            }\n            this._processBounce(mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance));\n        };\n        this._singleSelectorBounce = (selector, div) => {\n            const container = this.container, query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, radius = (elem.offsetWidth / 2) * pxRatio, tolerance = 10 * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, radius + tolerance)\n                    : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * 2, elem.offsetHeight * pxRatio + tolerance * 2);\n                this._processBounce(pos, radius, area);\n            });\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"bounce\", hoverMode)) {\n            this._processMouseBounce();\n        }\n        else {\n            divModeExecute(\"bounce\", divs, (selector, div) => this._singleSelectorBounce(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv;\n        return ((mouse.position && events.onHover.enable && isInArray(\"bounce\", events.onHover.mode)) ||\n            isDivModeEnabled(\"bounce\", divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source?.bounce);\n        }\n    }\n    reset() {\n    }\n}\n","import { OptionsColor, executeOnSingleOrMultiple, isArray, } from \"tsparticles-engine\";\nexport class BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.mix = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.mix !== undefined) {\n            this.mix = data.mix;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            const sourceColor = isArray(this.color) ? undefined : this.color;\n            this.color = executeOnSingleOrMultiple(data.color, (color) => {\n                return OptionsColor.create(sourceColor, color);\n            });\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { BubbleBase } from \"./BubbleBase\";\nexport class BubbleDiv extends BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { BubbleBase } from \"./BubbleBase\";\nimport { BubbleDiv } from \"./BubbleDiv\";\nexport class Bubble extends BubbleBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new BubbleDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nexport function calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromSingleOrMultiple, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl, } from \"tsparticles-engine\";\nimport { Bubble } from \"./Options/Classes/Bubble\";\nimport { calculateBubbleValue } from \"./Utils\";\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._clickBubble = () => {\n            const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || !mouseClickPos) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            const distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < 0) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, (p) => this.isEnabled(p)), { bubble } = container;\n            for (const particle of query) {\n                if (!bubble.clicking) {\n                    continue;\n                }\n                particle.bubble.inRange = !bubble.durationEnd;\n                const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n                if (timeSpent > bubbleOptions.duration) {\n                    bubble.durationEnd = true;\n                }\n                if (timeSpent > bubbleOptions.duration * 2) {\n                    bubble.clicking = false;\n                    bubble.durationEnd = false;\n                }\n                const sizeData = {\n                    bubbleObj: {\n                        optValue: container.retina.bubbleModeSize,\n                        value: particle.bubble.radius,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                        value: particle.size.value,\n                    },\n                    type: \"size\",\n                };\n                this._process(particle, distMouse, timeSpent, sizeData);\n                const opacityData = {\n                    bubbleObj: {\n                        optValue: bubbleOptions.opacity,\n                        value: particle.bubble.opacity,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.opacity.value),\n                        value: particle.opacity?.value ?? 1,\n                    },\n                    type: \"opacity\",\n                };\n                this._process(particle, distMouse, timeSpent, opacityData);\n                if (!bubble.durationEnd && distMouse <= distance) {\n                    this._hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n        };\n        this._hoverBubble = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < 0 || mousePos === undefined) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                particle.bubble.inRange = true;\n                const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = 1 - pointDistance / distance;\n                if (pointDistance <= distance) {\n                    if (ratio >= 0 && container.interactivity.status === mouseMoveEvent) {\n                        this._hoverBubbleSize(particle, ratio);\n                        this._hoverBubbleOpacity(particle, ratio);\n                        this._hoverBubbleColor(particle, ratio);\n                    }\n                }\n                else {\n                    this.reset(particle);\n                }\n                if (container.interactivity.status === mouseLeaveEvent) {\n                    this.reset(particle);\n                }\n            }\n        };\n        this._hoverBubbleColor = (particle, ratio, divBubble) => {\n            const options = this.container.actualOptions, bubbleOptions = divBubble ?? options.interactivity.modes.bubble;\n            if (!bubbleOptions) {\n                return;\n            }\n            if (!particle.bubble.finalColor) {\n                const modeColor = bubbleOptions.color;\n                if (!modeColor) {\n                    return;\n                }\n                const bubbleColor = itemFromSingleOrMultiple(modeColor);\n                particle.bubble.finalColor = rangeColorToHsl(bubbleColor);\n            }\n            if (!particle.bubble.finalColor) {\n                return;\n            }\n            if (bubbleOptions.mix) {\n                particle.bubble.color = undefined;\n                const pColor = particle.getFillColor();\n                particle.bubble.color = pColor\n                    ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, 1 - ratio, ratio))\n                    : particle.bubble.finalColor;\n            }\n            else {\n                particle.bubble.color = particle.bubble.finalColor;\n            }\n        };\n        this._hoverBubbleOpacity = (particle, ratio, divBubble) => {\n            const container = this.container, options = container.actualOptions, modeOpacity = divBubble?.opacity ?? options.interactivity.modes.bubble?.opacity;\n            if (!modeOpacity) {\n                return;\n            }\n            const optOpacity = particle.options.opacity.value, pOpacity = particle.opacity?.value ?? 1, opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n            if (opacity !== undefined) {\n                particle.bubble.opacity = opacity;\n            }\n        };\n        this._hoverBubbleSize = (particle, ratio, divBubble) => {\n            const container = this.container, modeSize = divBubble?.size ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n            if (modeSize === undefined) {\n                return;\n            }\n            const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio, pSize = particle.size.value, size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n            if (size !== undefined) {\n                particle.bubble.radius = size;\n            }\n        };\n        this._process = (particle, distMouse, timeSpent, data) => {\n            const container = this.container, bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || bubbleParam === undefined) {\n                return;\n            }\n            const bubbleDuration = bubbleOptions.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value || 0, type = data.type;\n            if (!bubbleDistance || bubbleDistance < 0 || bubbleParam === particlesParam) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            if (container.bubble.durationEnd) {\n                if (pObjBubble) {\n                    if (type === \"size\") {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === \"opacity\") {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n            else {\n                if (distMouse <= bubbleDistance) {\n                    const obj = pObjBubble ?? pObj;\n                    if (obj !== bubbleParam) {\n                        const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                        if (type === \"size\") {\n                            particle.bubble.radius = value;\n                        }\n                        if (type === \"opacity\") {\n                            particle.bubble.opacity = value;\n                        }\n                    }\n                }\n                else {\n                    if (type === \"size\") {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === \"opacity\") {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n        };\n        this._singleSelectorHover = (delta, selector, div) => {\n            const container = this.container, selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;\n            if (!bubble || !selectors.length) {\n                return;\n            }\n            selectors.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n                for (const particle of query) {\n                    if (!area.contains(particle.getPosition())) {\n                        continue;\n                    }\n                    particle.bubble.inRange = true;\n                    const divs = bubble.divs, divBubble = divMode(divs, elem);\n                    if (!particle.bubble.div || particle.bubble.div !== elem) {\n                        this.clear(particle, delta, true);\n                        particle.bubble.div = elem;\n                    }\n                    this._hoverBubbleSize(particle, 1, divBubble);\n                    this._hoverBubbleOpacity(particle, 1, divBubble);\n                    this._hoverBubbleColor(particle, 1, divBubble);\n                }\n            });\n        };\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== \"bubble\") {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    clear(particle, delta, force) {\n        if (particle.bubble.inRange && !force) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    init() {\n        const container = this.container, bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble) {\n            return;\n        }\n        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n        if (bubble.size !== undefined) {\n            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n        }\n    }\n    async interact(delta) {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(\"bubble\", hoverMode)) {\n            this._hoverBubble();\n        }\n        else if (clickEnabled && isInArray(\"bubble\", clickMode)) {\n            this._clickBubble();\n        }\n        else {\n            divModeExecute(\"bubble\", divs, (selector, div) => this._singleSelectorHover(delta, selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, { onClick, onDiv, onHover } = events, divBubble = isDivModeEnabled(\"bubble\", onDiv);\n        if (!(divBubble || (onHover.enable && mouse.position) || (onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        return isInArray(\"bubble\", onHover.mode) || isInArray(\"bubble\", onClick.mode) || divBubble;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bubble) {\n            options.bubble = new Bubble();\n        }\n        for (const source of sources) {\n            options.bubble.load(source?.bubble);\n        }\n    }\n    reset(particle) {\n        particle.bubble.inRange = false;\n    }\n}\n","export class ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { ConnectLinks } from \"./ConnectLinks\";\nexport class Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks();\n        this.radius = 60;\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links ?? data.lineLinked ?? data.line_linked);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { colorMix, drawLine, getStyleFromHsl, getStyleFromRgb, } from \"tsparticles-engine\";\nexport function gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(0, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(gradStop > 1 ? 1 : gradStop, getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(1, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nexport function drawConnectLine(context, width, lineStyle, begin, end) {\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n}\nexport function lineStyle(container, ctx, p1, p2) {\n    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;\n    if (!connectOptions) {\n        return;\n    }\n    return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nexport function drawConnection(container, p1, p2) {\n    container.canvas.draw((ctx) => {\n        const ls = lineStyle(container, ctx, p1, p2);\n        if (!ls) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        drawConnectLine(ctx, p1.retina.linksWidth ?? 0, ls, pos1, pos2);\n    });\n}\n","import { ExternalInteractorBase, isInArray, } from \"tsparticles-engine\";\nimport { Connect } from \"./Options/Classes/Connect\";\nimport { drawConnection } from \"./Utils\";\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;\n        if (!connect) {\n            return;\n        }\n        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n            const mousePos = container.interactivity.mouse.position;\n            if (!container.retina.connectModeDistance ||\n                container.retina.connectModeDistance < 0 ||\n                !container.retina.connectModeRadius ||\n                container.retina.connectModeRadius < 0 ||\n                !mousePos) {\n                return;\n            }\n            const distance = Math.abs(container.retina.connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            let i = 0;\n            for (const p1 of query) {\n                const pos1 = p1.getPosition();\n                for (const p2 of query.slice(i + 1)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(container.retina.connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        drawConnection(container, p1, p2);\n                    }\n                }\n                ++i;\n            }\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(\"connect\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.connect) {\n            options.connect = new Connect();\n        }\n        for (const source of sources) {\n            options.connect.load(source?.connect);\n        }\n    }\n    reset() {\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { GrabLinks } from \"./GrabLinks\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks();\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links ?? data.lineLinked ?? data.line_linked);\n    }\n}\n","import { drawLine, getStyleFromRgb } from \"tsparticles-engine\";\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n}\nexport function drawGrab(container, particle, lineColor, opacity, mousePos) {\n    container.canvas.draw((ctx) => {\n        const beginPos = particle.getPosition();\n        drawGrabLine(ctx, particle.retina.linksWidth ?? 0, beginPos, mousePos, lineColor, opacity);\n    });\n}\n","import { ExternalInteractorBase, getDistance, getLinkColor, getLinkRandomColor, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Grab } from \"./Options/Classes/Grab\";\nimport { drawGrab } from \"./Utils\";\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;\n        if (!grab) {\n            return;\n        }\n        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.modes.grab ||\n            !interactivity.events.onHover.enable ||\n            container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance;\n        if (!distance || distance < 0) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= 0) {\n                continue;\n            }\n            const optColor = grabLineOptions.color ?? particle.options.links?.color;\n            if (!container.particles.grabLineColor && optColor) {\n                const linksOptions = interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                continue;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"grab\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.grab) {\n            options.grab = new Grab();\n        }\n        for (const source of sources) {\n            options.grab.load(source?.grab);\n        }\n    }\n    reset() {\n    }\n}\n","import { ExternalInteractorBase } from \"tsparticles-engine\";\nexport class Pauser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"pause\") {\n                return;\n            }\n            const container = this.container;\n            if (container.getAnimationStatus()) {\n                container.pause();\n            }\n            else {\n                container.play();\n            }\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class Push {\n    constructor() {\n        this.default = true;\n        this.groups = [];\n        this.quantity = 4;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = setRangeValue(value);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        if (data.groups !== undefined) {\n            this.groups = data.groups.map((t) => t);\n        }\n        if (!this.groups.length) {\n            this.default = true;\n        }\n        const quantity = data.quantity ?? data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, itemFromArray, } from \"tsparticles-engine\";\nimport { Push } from \"./Options/Classes/Push\";\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"push\") {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const quantity = getRangeValue(pushOptions.quantity);\n            if (quantity <= 0) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            container.particles.push(quantity, container.interactivity.mouse, groupOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source?.push);\n        }\n    }\n    reset() {\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = setRangeValue(value);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const quantity = data.quantity ?? data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, } from \"tsparticles-engine\";\nimport { Remove } from \"./Options/Classes/Remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== \"remove\") {\n                return;\n            }\n            const removeNb = getRangeValue(options.interactivity.modes.remove.quantity);\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source?.remove);\n        }\n    }\n    reset() {\n    }\n}\n","export class RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.factor = 100;\n        this.speed = 1;\n        this.maxSpeed = 50;\n        this.easing = \"ease-out-quad\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { RepulseBase } from \"./RepulseBase\";\nexport class RepulseDiv extends RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { RepulseBase } from \"./RepulseBase\";\nimport { RepulseDiv } from \"./RepulseDiv\";\nexport class Repulse extends RepulseBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new RepulseDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, getEasing, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Repulse } from \"./Options/Classes/Repulse\";\nexport class Repulser extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickRepulse = () => {\n            const container = this.container, repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            const repulse = container.repulse || { particles: [] };\n            if (!repulse.finish) {\n                if (!repulse.count) {\n                    repulse.count = 0;\n                }\n                repulse.count++;\n                if (repulse.count === container.particles.count) {\n                    repulse.finish = true;\n                }\n            }\n            if (repulse.clicking) {\n                const repulseDistance = container.retina.repulseModeDistance;\n                if (!repulseDistance || repulseDistance < 0) {\n                    return;\n                }\n                const repulseRadius = Math.pow(repulseDistance / 6, 3), mouseClickPos = container.interactivity.mouse.clickPosition;\n                if (mouseClickPos === undefined) {\n                    return;\n                }\n                const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, (p) => this.isEnabled(p));\n                for (const particle of query) {\n                    const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** 2, velocity = repulseOptions.speed, force = (-repulseRadius * velocity) / d;\n                    if (d <= repulseRadius) {\n                        repulse.particles.push(particle);\n                        const vect = Vector.create(dx, dy);\n                        vect.length = force;\n                        particle.velocity.setTo(vect);\n                    }\n                }\n            }\n            else if (repulse.clicking === false) {\n                for (const particle of repulse.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                repulse.particles = [];\n            }\n        };\n        this._hoverRepulse = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;\n            if (!repulseRadius || repulseRadius < 0 || !mousePos) {\n                return;\n            }\n            this._processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n        };\n        this._processRepulse = (position, repulseRadius, area, divRepulse) => {\n            const container = this.container, query = container.particles.quadTree.query(area, (p) => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position), velocity = (divRepulse?.speed ?? repulseOptions.speed) * repulseOptions.factor, repulseFactor = clamp(getEasing(repulseOptions.easing)(1 - distance / repulseRadius) * velocity, 0, repulseOptions.maxSpeed), normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * repulseFactor, distance === 0 ? velocity : (dy / distance) * repulseFactor);\n                particle.position.addTo(normVec);\n            }\n        };\n        this._singleSelectorRepulse = (selector, div) => {\n            const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n            if (!repulse) {\n                return;\n            }\n            const query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = divMode(divs, elem);\n                this._processRepulse(pos, repulseRadius, area, divRepulse);\n            });\n        };\n        this._engine = engine;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, repulseOpts = options.interactivity.modes.repulse;\n            if (!repulseOpts || mode !== \"repulse\") {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            const repulse = container.repulse;\n            repulse.clicking = true;\n            repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            repulse.particles = [];\n            repulse.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                repulse.clicking = false;\n            }, repulseOpts.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hover = events.onHover, hoverEnabled = hover.enable, hoverMode = hover.mode, click = events.onClick, clickEnabled = click.enable, clickMode = click.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"repulse\", hoverMode)) {\n            this._hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(\"repulse\", clickMode)) {\n            this._clickRepulse();\n        }\n        else {\n            divModeExecute(\"repulse\", divs, (selector, div) => this._singleSelectorRepulse(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv, hover = events.onHover, click = events.onClick, divRepulse = isDivModeEnabled(\"repulse\", divs);\n        if (!(divRepulse || (hover.enable && mouse.position) || (click.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = hover.mode, clickMode = click.mode;\n        return isInArray(\"repulse\", hoverMode) || isInArray(\"repulse\", clickMode) || divRepulse;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new Repulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source?.repulse);\n        }\n    }\n    reset() {\n    }\n}\n","export class Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ExternalInteractorBase, getDistance, isInArray, } from \"tsparticles-engine\";\nimport { Slow } from \"./Options/Classes/Slow\";\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"slow\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source?.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slowOptions = options.interactivity.modes.slow;\n        if (!slowOptions || !radius || radius < 0 || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slowOptions.factor, { slow } = particle;\n        if (dist > radius) {\n            return;\n        }\n        slow.inRange = true;\n        slow.factor = proximityFactor / slowFactor;\n    }\n}\n","export const InterlaceOffsets = [0, 4, 2, 1];\nexport const InterlaceSteps = [8, 8, 4, 2];\n","export class ByteStream {\n    constructor(bytes) {\n        this.pos = 0;\n        this.data = new Uint8ClampedArray(bytes);\n    }\n    getString(count) {\n        const slice = this.data.slice(this.pos, this.pos + count);\n        this.pos += slice.length;\n        return slice.reduce((acc, curr) => acc + String.fromCharCode(curr), \"\");\n    }\n    nextByte() {\n        return this.data[this.pos++];\n    }\n    nextTwoBytes() {\n        this.pos += 2;\n        return this.data[this.pos - 2] + (this.data[this.pos - 1] << 8);\n    }\n    readSubBlocks() {\n        let blockString = \"\", size = 0;\n        do {\n            size = this.data[this.pos++];\n            for (let count = size; --count >= 0; blockString += String.fromCharCode(this.data[this.pos++])) {\n            }\n        } while (size !== 0);\n        return blockString;\n    }\n    readSubBlocksBin() {\n        let size = 0, len = 0;\n        for (let offset = 0; (size = this.data[this.pos + offset]) !== 0; offset += size + 1) {\n            len += size;\n        }\n        const blockData = new Uint8Array(len);\n        for (let i = 0; (size = this.data[this.pos++]) !== 0;) {\n            for (let count = size; --count >= 0; blockData[i++] = this.data[this.pos++]) {\n            }\n        }\n        return blockData;\n    }\n    skipSubBlocks() {\n        for (; this.data[this.pos] !== 0; this.pos += this.data[this.pos] + 1) {\n        }\n        this.pos++;\n    }\n}\n","import { InterlaceOffsets, InterlaceSteps } from \"./Constants\";\nimport { ByteStream } from \"./ByteStream\";\nfunction parseColorTable(byteStream, count) {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n        colors.push({\n            r: byteStream.data[byteStream.pos],\n            g: byteStream.data[byteStream.pos + 1],\n            b: byteStream.data[byteStream.pos + 2],\n        });\n        byteStream.pos += 3;\n    }\n    return colors;\n}\nasync function parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex) {\n    switch (byteStream.nextByte()) {\n        case 249: {\n            const frame = gif.frames[getFrameIndex(false)];\n            byteStream.pos++;\n            const packedByte = byteStream.nextByte();\n            frame.GCreserved = (packedByte & 0xe0) >>> 5;\n            frame.disposalMethod = (packedByte & 0x1c) >>> 2;\n            frame.userInputDelayFlag = (packedByte & 2) === 2;\n            const transparencyFlag = (packedByte & 1) === 1;\n            frame.delayTime = byteStream.nextTwoBytes() * 0xa;\n            const transparencyIndex = byteStream.nextByte();\n            if (transparencyFlag) {\n                getTransparencyIndex(transparencyIndex);\n            }\n            byteStream.pos++;\n            break;\n        }\n        case 255: {\n            byteStream.pos++;\n            const applicationExtension = {\n                identifier: byteStream.getString(8),\n                authenticationCode: byteStream.getString(3),\n                data: byteStream.readSubBlocksBin(),\n            };\n            gif.applicationExtensions.push(applicationExtension);\n            break;\n        }\n        case 254: {\n            gif.comments.push([getFrameIndex(false), byteStream.readSubBlocks()]);\n            break;\n        }\n        case 1: {\n            if (gif.globalColorTable.length === 0) {\n                throw new EvalError(\"plain text extension without global color table\");\n            }\n            byteStream.pos++;\n            gif.frames[getFrameIndex(false)].plainTextData = {\n                left: byteStream.nextTwoBytes(),\n                top: byteStream.nextTwoBytes(),\n                width: byteStream.nextTwoBytes(),\n                height: byteStream.nextTwoBytes(),\n                charSize: {\n                    width: byteStream.nextTwoBytes(),\n                    height: byteStream.nextTwoBytes(),\n                },\n                foregroundColor: byteStream.nextByte(),\n                backgroundColor: byteStream.nextByte(),\n                text: byteStream.readSubBlocks(),\n            };\n            break;\n        }\n        default:\n            byteStream.skipSubBlocks();\n            break;\n    }\n}\nasync function parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    const frame = gif.frames[getFrameIndex(true)];\n    frame.left = byteStream.nextTwoBytes();\n    frame.top = byteStream.nextTwoBytes();\n    frame.width = byteStream.nextTwoBytes();\n    frame.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), localColorTableFlag = (packedByte & 0x80) === 0x80, interlacedFlag = (packedByte & 0x40) === 0x40;\n    frame.sortFlag = (packedByte & 0x20) === 0x20;\n    frame.reserved = (packedByte & 0x18) >>> 3;\n    const localColorCount = 1 << ((packedByte & 7) + 1);\n    if (localColorTableFlag) {\n        frame.localColorTable = parseColorTable(byteStream, localColorCount);\n    }\n    const getColor = (index) => {\n        const { r, g, b } = (localColorTableFlag ? frame.localColorTable : gif.globalColorTable)[index];\n        return { r, g, b, a: index === getTransparencyIndex(null) ? (avgAlpha ? ~~((r + g + b) / 3) : 0) : 255 };\n    };\n    const image = (() => {\n        try {\n            return new ImageData(frame.width, frame.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (image == null) {\n        throw new EvalError(\"GIF frame size is to large\");\n    }\n    const minCodeSize = byteStream.nextByte(), imageData = byteStream.readSubBlocksBin(), clearCode = 1 << minCodeSize;\n    const readBits = (pos, len) => {\n        const bytePos = pos >>> 3, bitPos = pos & 7;\n        return (((imageData[bytePos] + (imageData[bytePos + 1] << 8) + (imageData[bytePos + 2] << 16)) &\n            (((1 << len) - 1) << bitPos)) >>>\n            bitPos);\n    };\n    if (interlacedFlag) {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pass = 0; pass < 4; pass++) {\n            if (InterlaceOffsets[pass] < frame.height) {\n                for (let pixelPos = 0, lineIndex = 0;;) {\n                    const last = code;\n                    code = readBits(pos, size);\n                    pos += size + 1;\n                    if (code === clearCode) {\n                        size = minCodeSize + 1;\n                        dic.length = clearCode + 2;\n                        for (let i = 0; i < dic.length; i++) {\n                            dic[i] = i < clearCode ? [i] : [];\n                        }\n                    }\n                    else {\n                        if (code >= dic.length) {\n                            dic.push(dic[last].concat(dic[last][0]));\n                        }\n                        else if (last !== clearCode) {\n                            dic.push(dic[last].concat(dic[code][0]));\n                        }\n                        for (let i = 0; i < dic[code].length; i++) {\n                            const { r, g, b, a } = getColor(dic[code][i]);\n                            image.data.set([r, g, b, a], InterlaceOffsets[pass] * frame.width +\n                                InterlaceSteps[pass] * lineIndex +\n                                (pixelPos % (frame.width * 4)));\n                            pixelPos += 4;\n                        }\n                        if (dic.length === 1 << size && size < 0xc) {\n                            size++;\n                        }\n                    }\n                    if (pixelPos === frame.width * 4 * (lineIndex + 1)) {\n                        lineIndex++;\n                        if (InterlaceOffsets[pass] + InterlaceSteps[pass] * lineIndex >= frame.height) {\n                            break;\n                        }\n                    }\n                }\n            }\n            progressCallback?.(byteStream.pos / (byteStream.data.length - 1), getFrameIndex(false) + 1, image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n    }\n    else {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pixelPos = -4;;) {\n            const last = code;\n            code = readBits(pos, size);\n            pos += size;\n            if (code === clearCode) {\n                size = minCodeSize + 1;\n                dic.length = clearCode + 2;\n                for (let i = 0; i < dic.length; i++) {\n                    dic[i] = i < clearCode ? [i] : [];\n                }\n            }\n            else {\n                if (code === clearCode + 1) {\n                    break;\n                }\n                if (code >= dic.length) {\n                    dic.push(dic[last].concat(dic[last][0]));\n                }\n                else if (last !== clearCode) {\n                    dic.push(dic[last].concat(dic[code][0]));\n                }\n                for (let i = 0; i < dic[code].length; i++) {\n                    const { r, g, b, a } = getColor(dic[code][i]);\n                    image.data.set([r, g, b, a], (pixelPos += 4));\n                }\n                if (dic.length >= 1 << size && size < 0xc) {\n                    size++;\n                }\n            }\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n        progressCallback?.((byteStream.pos + 1) / byteStream.data.length, getFrameIndex(false) + 1, frame.image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n    }\n}\nasync function parseBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    switch (byteStream.nextByte()) {\n        case 59:\n            return true;\n        case 44:\n            await parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback);\n            break;\n        case 33:\n            await parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex);\n            break;\n        default:\n            throw new EvalError(\"undefined block found\");\n    }\n    return false;\n}\nexport function getGIFLoopAmount(gif) {\n    for (const extension of gif.applicationExtensions) {\n        if (extension.identifier + extension.authenticationCode !== \"NETSCAPE2.0\") {\n            continue;\n        }\n        return extension.data[1] + (extension.data[2] << 8);\n    }\n    return NaN;\n}\nexport async function decodeGIF(gifURL, progressCallback, avgAlpha) {\n    if (!avgAlpha)\n        avgAlpha = false;\n    const res = await fetch(gifURL);\n    if (!res.ok && res.status === 404) {\n        throw new EvalError(\"file not found\");\n    }\n    const buffer = await res.arrayBuffer();\n    const gif = {\n        width: 0,\n        height: 0,\n        totalTime: 0,\n        colorRes: 0,\n        pixelAspectRatio: 0,\n        frames: [],\n        sortFlag: false,\n        globalColorTable: [],\n        backgroundImage: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n        comments: [],\n        applicationExtensions: [],\n    }, byteStream = new ByteStream(new Uint8ClampedArray(buffer));\n    if (byteStream.getString(6) !== \"GIF89a\") {\n        throw new Error(\"not a supported GIF file\");\n    }\n    gif.width = byteStream.nextTwoBytes();\n    gif.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), globalColorTableFlag = (packedByte & 0x80) === 0x80;\n    gif.colorRes = (packedByte & 0x70) >>> 4;\n    gif.sortFlag = (packedByte & 8) === 8;\n    const globalColorCount = 1 << ((packedByte & 7) + 1), backgroundColorIndex = byteStream.nextByte();\n    gif.pixelAspectRatio = byteStream.nextByte();\n    if (gif.pixelAspectRatio !== 0) {\n        gif.pixelAspectRatio = (gif.pixelAspectRatio + 0xf) / 0x40;\n    }\n    if (globalColorTableFlag) {\n        gif.globalColorTable = parseColorTable(byteStream, globalColorCount);\n    }\n    const backgroundImage = (() => {\n        try {\n            return new ImageData(gif.width, gif.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (backgroundImage == null) {\n        throw new Error(\"GIF frame size is to large\");\n    }\n    const { r, g, b } = gif.globalColorTable[backgroundColorIndex];\n    backgroundImage.data.set(globalColorTableFlag ? [r, g, b, 255] : [0, 0, 0, 0]);\n    for (let i = 4; i < backgroundImage.data.length; i *= 2) {\n        backgroundImage.data.copyWithin(i, 0, i);\n    }\n    gif.backgroundImage = backgroundImage;\n    let frameIndex = -1, incrementFrameIndex = true, transparencyIndex = -1;\n    const getframeIndex = (increment) => {\n        if (increment) {\n            incrementFrameIndex = true;\n        }\n        return frameIndex;\n    };\n    const getTransparencyIndex = (newValue) => {\n        if (newValue != null) {\n            transparencyIndex = newValue;\n        }\n        return transparencyIndex;\n    };\n    try {\n        do {\n            if (incrementFrameIndex) {\n                gif.frames.push({\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0,\n                    disposalMethod: 0,\n                    image: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n                    plainTextData: null,\n                    userInputDelayFlag: false,\n                    delayTime: 0,\n                    sortFlag: false,\n                    localColorTable: [],\n                    reserved: 0,\n                    GCreserved: 0,\n                });\n                frameIndex++;\n                transparencyIndex = -1;\n                incrementFrameIndex = false;\n            }\n        } while (!(await parseBlock(byteStream, gif, avgAlpha, getframeIndex, getTransparencyIndex, progressCallback)));\n        gif.frames.length--;\n        for (const frame of gif.frames) {\n            if (frame.userInputDelayFlag && frame.delayTime === 0) {\n                gif.totalTime = Infinity;\n                break;\n            }\n            gif.totalTime += frame.delayTime;\n        }\n        return gif;\n    }\n    catch (error) {\n        if (error instanceof EvalError) {\n            throw new Error(`error while parsing frame ${frameIndex} \"${error.message}\"`);\n        }\n        throw error;\n    }\n}\n","import { errorPrefix, getLogger, getStyleFromHsl } from \"tsparticles-engine\";\nimport { decodeGIF, getGIFLoopAmount } from \"./GifUtils/Utils\";\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            getLogger().error(`${errorPrefix} loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function loadGifImage(image) {\n    if (image.type !== \"gif\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    try {\n        image.gifData = await decodeGIF(image.source);\n        image.gifLoopCount = getGIFLoopAmount(image.gifData) ?? 0;\n        if (image.gifLoopCount === 0) {\n            image.gifLoopCount = Infinity;\n        }\n    }\n    catch {\n        image.error = true;\n    }\n    image.loading = false;\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        getLogger().error(`${errorPrefix} Image not found`);\n        image.error = true;\n    }\n    else {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? 1), imageRes = {\n        color,\n        gif: imageData.gif,\n        data: {\n            ...image,\n            svgData: svgColoredData,\n        },\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: imageData.replaceColor ?? imageData.replace_color,\n        source: imageData.src,\n    };\n    return new Promise((resolve) => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        img.addEventListener(\"error\", async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = {\n                ...image,\n                error: false,\n                loading: true,\n            };\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        });\n        img.src = url;\n    });\n}\n","import { errorPrefix } from \"tsparticles-engine\";\nimport { replaceImageColor } from \"./Utils\";\nexport class ImageDrawer {\n    constructor(engine) {\n        this.loadImageShape = async (imageShape) => {\n            if (!this._engine.loadImage) {\n                throw new Error(`${errorPrefix} image shape not initialized`);\n            }\n            await this._engine.loadImage({\n                gif: imageShape.gif,\n                name: imageShape.name,\n                replaceColor: imageShape.replaceColor ?? imageShape.replace_color ?? false,\n                src: imageShape.src,\n            });\n        };\n        this._engine = engine;\n    }\n    addImage(image) {\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        this._engine.images.push(image);\n    }\n    draw(context, particle, radius, opacity, delta) {\n        const image = particle.image, element = image?.element;\n        if (!image) {\n            return;\n        }\n        context.globalAlpha = opacity;\n        if (image.gif && image.gifData) {\n            const offscreenCanvas = new OffscreenCanvas(image.gifData.width, image.gifData.height), offscreenContext = offscreenCanvas.getContext(\"2d\");\n            if (!offscreenContext) {\n                throw new Error(\"could not create offscreen canvas context\");\n            }\n            offscreenContext.imageSmoothingQuality = \"low\";\n            offscreenContext.imageSmoothingEnabled = false;\n            offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n            if (particle.gifLoopCount === undefined) {\n                particle.gifLoopCount = image.gifLoopCount ?? 0;\n            }\n            let frameIndex = particle.gifFrame ?? 0;\n            const pos = { x: -image.gifData.width * 0.5, y: -image.gifData.height * 0.5 }, frame = image.gifData.frames[frameIndex];\n            if (particle.gifTime === undefined) {\n                particle.gifTime = 0;\n            }\n            if (!frame.bitmap) {\n                return;\n            }\n            context.scale(radius / image.gifData.width, radius / image.gifData.height);\n            switch (frame.disposalMethod) {\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 0:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                    break;\n                case 1:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    break;\n                case 2:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                    if (image.gifData.globalColorTable.length === 0) {\n                        offscreenContext.putImageData(image.gifData.frames[0].image, pos.x + frame.left, pos.y + frame.top);\n                    }\n                    else {\n                        offscreenContext.putImageData(image.gifData.backgroundImage, pos.x, pos.y);\n                    }\n                    break;\n                case 3:\n                    {\n                        const previousImageData = offscreenContext.getImageData(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                        offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                        context.drawImage(offscreenCanvas, pos.x, pos.y);\n                        offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                        offscreenContext.putImageData(previousImageData, 0, 0);\n                    }\n                    break;\n            }\n            particle.gifTime += delta.value;\n            if (particle.gifTime > frame.delayTime) {\n                particle.gifTime -= frame.delayTime;\n                if (++frameIndex >= image.gifData.frames.length) {\n                    if (--particle.gifLoopCount <= 0) {\n                        return;\n                    }\n                    frameIndex = 0;\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                }\n                particle.gifFrame = frameIndex;\n            }\n            context.scale(image.gifData.width / radius, image.gifData.height / radius);\n        }\n        else if (element) {\n            const ratio = image.ratio, pos = {\n                x: -radius,\n                y: -radius,\n            };\n            context.drawImage(element, pos.x, pos.y, radius * 2, (radius * 2) / ratio);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (!options.preload || !this._engine.loadImage) {\n            return;\n        }\n        for (const imageData of options.preload) {\n            await this._engine.loadImage(imageData);\n        }\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const imageData = particle.shapeData, image = this._engine.images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            this.loadImageShape(imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const images = this._engine.images, imageData = particle.shapeData, color = particle.getFillColor(), image = images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        const replaceColor = imageData.replaceColor ?? imageData.replace_color ?? image.replaceColor;\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        (async () => {\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await replaceImageColor(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    gif: image.gif,\n                    gifData: image.gifData,\n                    gifLoopCount: image.gifLoopCount,\n                    loaded: true,\n                    ratio: imageData.width && imageData.height ? imageData.width / imageData.height : image.ratio ?? 1,\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = imageData.fill ?? particle.fill, close = imageData.close ?? particle.close, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.fill = imageShape.fill;\n            particle.close = imageShape.close;\n        })();\n    }\n}\n","export class Preload {\n    constructor() {\n        this.src = \"\";\n        this.gif = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.gif !== undefined) {\n            this.gif = data.gif;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.replaceColor !== undefined) {\n            this.replaceColor = data.replaceColor;\n        }\n        if (data.src !== undefined) {\n            this.src = data.src;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { Preload } from \"./Options/Classes/Preload\";\nexport class ImagePreloaderPlugin {\n    constructor(engine) {\n        this.id = \"imagePreloader\";\n        this._engine = engine;\n    }\n    getPlugin() {\n        return {};\n    }\n    loadOptions(options, source) {\n        if (!source || !source.preload) {\n            return;\n        }\n        if (!options.preload) {\n            options.preload = [];\n        }\n        const preloadOptions = options.preload;\n        for (const item of source.preload) {\n            const existing = preloadOptions.find((t) => t.name === item.name || t.src === item.src);\n            if (existing) {\n                existing.load(item);\n            }\n            else {\n                const preload = new Preload();\n                preload.load(item);\n                preloadOptions.push(preload);\n            }\n        }\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n","import { downloadSvgImage, loadGifImage, loadImage } from \"./Utils\";\nimport { ImageDrawer } from \"./ImageDrawer\";\nimport { ImagePreloaderPlugin } from \"./ImagePreloader\";\nimport { errorPrefix } from \"tsparticles-engine\";\nfunction addLoadImageToEngine(engine) {\n    if (engine.loadImage) {\n        return;\n    }\n    engine.loadImage = async (data) => {\n        if (!data.name && !data.src) {\n            throw new Error(`${errorPrefix} no image source provided`);\n        }\n        if (!engine.images) {\n            engine.images = [];\n        }\n        if (engine.images.find((t) => t.name === data.name || t.source === data.src)) {\n            return;\n        }\n        try {\n            const image = {\n                gif: data.gif ?? false,\n                name: data.name ?? data.src,\n                source: data.src,\n                type: data.src.substring(data.src.length - 3),\n                error: false,\n                loading: true,\n                replaceColor: data.replaceColor,\n                ratio: data.width && data.height ? data.width / data.height : undefined,\n            };\n            engine.images.push(image);\n            const imageFunc = data.gif ? loadGifImage : data.replaceColor ? downloadSvgImage : loadImage;\n            await imageFunc(image);\n        }\n        catch {\n            throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);\n        }\n    };\n}\nexport async function loadImageShape(engine, refresh = true) {\n    addLoadImageToEngine(engine);\n    const preloader = new ImagePreloaderPlugin(engine);\n    await engine.addPlugin(preloader, refresh);\n    await engine.addShape([\"image\", \"images\"], new ImageDrawer(engine), refresh);\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDelay extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDuration extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.0001;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { LifeDelay } from \"./LifeDelay\";\nimport { LifeDuration } from \"./LifeDuration\";\nexport class Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay();\n        this.duration = new LifeDuration();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\n","import { getRandom, getRangeValue, randomInRange, setRangeValue, } from \"tsparticles-engine\";\nimport { Life } from \"./Options/Classes/Life\";\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            delayTime: 0,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            time: 0,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= 0) {\n            particle.life.duration = -1;\n        }\n        if (particle.life.count <= 0) {\n            particle.life.count = -1;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > 0;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source?.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        const life = particle.life;\n        let justSpawned = false;\n        if (particle.spawning) {\n            life.delayTime += delta.value;\n            if (life.delayTime >= particle.life.delay) {\n                justSpawned = true;\n                particle.spawning = false;\n                life.delayTime = 0;\n                life.time = 0;\n            }\n            else {\n                return;\n            }\n        }\n        if (life.duration === -1) {\n            return;\n        }\n        if (particle.spawning) {\n            return;\n        }\n        if (justSpawned) {\n            life.time = 0;\n        }\n        else {\n            life.time += delta.value;\n        }\n        if (life.time < life.duration) {\n            return;\n        }\n        life.time = 0;\n        if (particle.life.count > 0) {\n            particle.life.count--;\n        }\n        if (particle.life.count === 0) {\n            particle.destroy();\n            return;\n        }\n        const canvasSize = this.container.canvas.size, widthRange = setRangeValue(0, canvasSize.width), heightRange = setRangeValue(0, canvasSize.width);\n        particle.position.x = randomInRange(widthRange);\n        particle.position.y = randomInRange(heightRange);\n        particle.spawning = true;\n        life.delayTime = 0;\n        life.time = 0;\n        particle.reset();\n        const lifeOptions = particle.options.life;\n        if (lifeOptions) {\n            life.delay = getRangeValue(lifeOptions.delay.value) * 1000;\n            life.duration = getRangeValue(lifeOptions.duration.value) * 1000;\n        }\n    }\n}\n","export class LineDrawer {\n    draw(context, particle, radius) {\n        const shapeData = particle.shapeData;\n        context.moveTo(-radius / 2, 0);\n        context.lineTo(radius / 2, 0);\n        context.lineCap = shapeData?.cap ?? \"butt\";\n    }\n    getSidesCount() {\n        return 1;\n    }\n}\n","import { isSsr } from \"tsparticles-engine\";\nexport class ParallaxMover {\n    init() {\n    }\n    isEnabled(particle) {\n        return (!isSsr() &&\n            !particle.destroyed &&\n            particle.container.actualOptions.interactivity.events.onHover.parallax.enable);\n    }\n    move(particle) {\n        const container = particle.container, options = container.actualOptions, parallaxOptions = options.interactivity.events.onHover.parallax;\n        if (isSsr() || !parallaxOptions.enable) {\n            return;\n        }\n        const parallaxForce = parallaxOptions.force, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasSize = container.canvas.size, canvasCenter = {\n            x: canvasSize.width / 2,\n            y: canvasSize.height / 2,\n        }, parallaxSmooth = parallaxOptions.smooth, factor = particle.getRadius() / parallaxForce, centerDistance = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        }, { offset } = particle;\n        offset.x += (centerDistance.x - offset.x) / parallaxSmooth;\n        offset.y += (centerDistance.y - offset.y) / parallaxSmooth;\n    }\n}\n","export class ParticlesInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"particles\";\n    }\n}\n","import { ParticlesInteractorBase, getDistances, } from \"tsparticles-engine\";\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1) {\n        const container = this.container, distance = p1.retina.attractDistance ?? container.retina.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * 1000), ay = dy / (rotate.y * 1000), p1Factor = p2.size.value / p1.size.value, p2Factor = 1 / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n    const factor = clamp((p1.options.collisions.absorb.speed * delta.factor) / 10, 0, r2);\n    p1.size.value += factor / 2;\n    p2.size.value -= factor;\n    if (r2 <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n    }\n}\nexport function absorb(p1, p2, delta, pixelRatio) {\n    const r1 = p1.getRadius(), r2 = p2.getRadius();\n    if (r1 === undefined && r2 !== undefined) {\n        p1.destroy();\n    }\n    else if (r1 !== undefined && r2 === undefined) {\n        p2.destroy();\n    }\n    else if (r1 !== undefined && r2 !== undefined) {\n        if (r1 >= r2) {\n            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n        }\n        else {\n            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n        }\n    }\n}\n","import { circleBounce, circleBounceDataFromParticle, getRangeValue } from \"tsparticles-engine\";\nconst fixBounceSpeed = (p) => {\n    if (p.collisionMaxSpeed === undefined) {\n        p.collisionMaxSpeed = getRangeValue(p.options.collisions.maxSpeed);\n    }\n    if (p.velocity.length > p.collisionMaxSpeed) {\n        p.velocity.length = p.collisionMaxSpeed;\n    }\n};\nexport function bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n    fixBounceSpeed(p1);\n    fixBounceSpeed(p2);\n}\n","import { absorb } from \"./Absorb\";\nimport { bounce } from \"./Bounce\";\nimport { destroy } from \"./Destroy\";\nexport function resolveCollision(p1, p2, delta, pixelRatio) {\n    switch (p1.options.collisions.mode) {\n        case \"absorb\": {\n            absorb(p1, p2, delta, pixelRatio);\n            break;\n        }\n        case \"bounce\": {\n            bounce(p1, p2);\n            break;\n        }\n        case \"destroy\": {\n            destroy(p1, p2);\n            break;\n        }\n    }\n}\n","import { bounce } from \"./Bounce\";\nexport function destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        const deleteP = p1.getRadius() >= p2.getRadius() ? p2 : p1;\n        deleteP.destroy();\n    }\n}\n","import { ParticlesInteractorBase, getDistance } from \"tsparticles-engine\";\nimport { resolveCollision } from \"./ResolveCollision\";\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1, delta) {\n        if (p1.destroyed || p1.spawning) {\n            return;\n        }\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n","import { Circle, Rectangle } from \"tsparticles-engine\";\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = { ...canvasSize };\n    }\n    contains(point) {\n        const { width, height } = this.canvasSize;\n        const { x, y } = point;\n        return (super.contains(point) ||\n            super.contains({ x: x - width, y }) ||\n            super.contains({ x: x - width, y: y - height }) ||\n            super.contains({ x, y: y - height }));\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * 2);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.color.value = \"#000\";\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nimport { LinksShadow } from \"./LinksShadow\";\nimport { LinksTriangle } from \"./LinksTriangle\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { Circle, ParticlesInteractorBase, getDistances, getLinkRandomColor, } from \"tsparticles-engine\";\nimport { CircleWarp } from \"./CircleWarp\";\nimport { Links } from \"./Options/Classes/Links\";\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    const { dx, dy, distance } = getDistances(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const absDiffs = {\n        x: Math.abs(dx),\n        y: Math.abs(dy),\n    }, warpDistances = {\n        x: Math.min(absDiffs.x, canvasSize.width - absDiffs.x),\n        y: Math.min(absDiffs.y, canvasSize.height - absDiffs.y),\n    };\n    return Math.sqrt(warpDistances.x ** 2 + warpDistances.y ** 2);\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n        this._setColor = (p1) => {\n            if (!p1.options.links) {\n                return;\n            }\n            const container = this.linkContainer, linksOptions = p1.options.links;\n            let linkColor = linksOptions.id === undefined\n                ? container.particles.linksColor\n                : container.particles.linksColors.get(linksOptions.id);\n            if (linkColor) {\n                return;\n            }\n            const optColor = linksOptions.color;\n            linkColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            if (linksOptions.id === undefined) {\n                container.particles.linksColor = linkColor;\n            }\n            else {\n                container.particles.linksColors.set(linksOptions.id, linkColor);\n            }\n        };\n        this.linkContainer = container;\n    }\n    clear() {\n    }\n    init() {\n        this.linkContainer.particles.linksColor = undefined;\n        this.linkContainer.particles.linksColors = new Map();\n    }\n    async interact(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = p1.retina.linksDistance ?? 0, warp = linkOpt1.warp, range = warp\n            ? new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Circle(pos1.x, pos1.y, optDistance), query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !linkOpt2?.enable ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.some((t) => t.destination === p2) ||\n                p2.links.some((t) => t.destination === p1)) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                continue;\n            }\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\n            this._setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        return !!particle.options.links?.enable;\n    }\n    loadParticlesOptions(options, ...sources) {\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load(source?.links ?? source?.lineLinked ?? source?.line_linked);\n        }\n    }\n    reset() {\n    }\n}\n","import { drawLine, drawTriangle, getDistance, getDistances, getRandom, getStyleFromRgb, rangeColorToRgb, } from \"tsparticles-engine\";\nexport function drawLinkLine(params) {\n    let drawn = false;\n    const { begin, end, maxDistance, context, canvasSize, width, backgroundMask, colorLine, opacity, links } = params;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (links.warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    const { shadow } = links;\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(params) {\n    const { context, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle } = params;\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\nexport function getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nexport function setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map((t) => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\n","import { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb, } from \"tsparticles-engine\";\nimport { drawLinkLine, drawLinkTriangle, setLinkFrequency } from \"./Utils\";\nexport class LinkInstance {\n    constructor(container) {\n        this.container = container;\n        this._drawLinkLine = (p1, link) => {\n            const p1LinksOptions = p1.options.links;\n            if (!p1LinksOptions?.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n            let opacity = link.opacity;\n            container.canvas.draw((ctx) => {\n                let colorLine;\n                const twinkle = p1.options.twinkle?.lines;\n                if (twinkle?.enable) {\n                    const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(twinkle.color), twinkling = getRandom() < twinkleFreq;\n                    if (twinkling && twinkleRgb) {\n                        colorLine = twinkleRgb;\n                        opacity = getRangeValue(twinkle.opacity);\n                    }\n                }\n                if (!colorLine) {\n                    const linkColor = p1LinksOptions.id !== undefined\n                        ? container.particles.linksColors.get(p1LinksOptions.id)\n                        : container.particles.linksColor;\n                    colorLine = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorLine) {\n                    return;\n                }\n                const width = p1.retina.linksWidth ?? 0, maxDistance = p1.retina.linksDistance ?? 0, { backgroundMask } = options;\n                drawLinkLine({\n                    context: ctx,\n                    width,\n                    begin: pos1,\n                    end: pos2,\n                    maxDistance,\n                    canvasSize: container.canvas.size,\n                    links: p1LinksOptions,\n                    backgroundMask: backgroundMask,\n                    colorLine,\n                    opacity,\n                });\n            });\n        };\n        this._drawLinkTriangle = (p1, link1, link2) => {\n            const linksOptions = p1.options.links;\n            if (!linksOptions?.enable) {\n                return;\n            }\n            const triangleOptions = linksOptions.triangles;\n            if (!triangleOptions.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, opacityTriangle = triangleOptions.opacity ?? (link1.opacity + link2.opacity) / 2;\n            if (opacityTriangle <= 0) {\n                return;\n            }\n            container.canvas.draw((ctx) => {\n                const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = p1.retina.linksDistance ?? 0;\n                if (getDistance(pos1, pos2) > linksDistance ||\n                    getDistance(pos3, pos2) > linksDistance ||\n                    getDistance(pos3, pos1) > linksDistance) {\n                    return;\n                }\n                let colorTriangle = rangeColorToRgb(triangleOptions.color);\n                if (!colorTriangle) {\n                    const linkColor = linksOptions.id !== undefined\n                        ? container.particles.linksColors.get(linksOptions.id)\n                        : container.particles.linksColor;\n                    colorTriangle = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorTriangle) {\n                    return;\n                }\n                drawLinkTriangle({\n                    context: ctx,\n                    pos1,\n                    pos2,\n                    pos3,\n                    backgroundMask: options.backgroundMask,\n                    colorTriangle,\n                    opacityTriangle,\n                });\n            });\n        };\n        this._drawTriangles = (options, p1, link, p1Links) => {\n            const p2 = link.destination;\n            if (!(options.links?.triangles.enable && p2.options.links?.triangles.enable)) {\n                return;\n            }\n            const vertices = p2.links?.filter((t) => {\n                const linkFreq = this._getLinkFrequency(p2, t.destination);\n                return (p2.options.links &&\n                    linkFreq <= p2.options.links.frequency &&\n                    p1Links.findIndex((l) => l.destination === t.destination) >= 0);\n            });\n            if (!vertices?.length) {\n                return;\n            }\n            for (const vertex of vertices) {\n                const p3 = vertex.destination, triangleFreq = this._getTriangleFrequency(p1, p2, p3);\n                if (triangleFreq > options.links.triangles.frequency) {\n                    continue;\n                }\n                this._drawLinkTriangle(p1, link, vertex);\n            }\n        };\n        this._getLinkFrequency = (p1, p2) => {\n            return setLinkFrequency([p1, p2], this._freqs.links);\n        };\n        this._getTriangleFrequency = (p1, p2, p3) => {\n            return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n        };\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        const { links, options } = particle;\n        if (!links || links.length <= 0) {\n            return;\n        }\n        const p1Links = links.filter((l) => options.links && this._getLinkFrequency(particle, l.destination) <= options.links.frequency);\n        for (const link of p1Links) {\n            this._drawTriangles(options, particle, link, p1Links);\n            if (link.opacity > 0 && (particle.retina.linksWidth ?? 0) > 0) {\n                this._drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this.container.retina.pixelRatio, { retina } = particle, { distance, width } = particle.options.links;\n        retina.linksDistance = distance * ratio;\n        retina.linksWidth = width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n}\n","import { LinkInstance } from \"./LinkInstance\";\nclass LinksPlugin {\n    constructor() {\n        this.id = \"links\";\n    }\n    getPlugin(container) {\n        return new LinkInstance(container);\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\nexport async function loadLinksPlugin(engine, refresh = true) {\n    const plugin = new LinksPlugin();\n    await engine.addPlugin(plugin, refresh);\n}\n","import { loadLinksInteraction } from \"./interaction\";\nimport { loadLinksPlugin } from \"./plugin\";\nexport async function loadParticlesLinksInteraction(engine, refresh = true) {\n    await loadLinksInteraction(engine, refresh);\n    await loadLinksPlugin(engine, refresh);\n}\nexport * from \"./Options/Classes/Links\";\nexport * from \"./Options/Classes/LinksShadow\";\nexport * from \"./Options/Classes/LinksTriangle\";\nexport * from \"./Options/Interfaces/ILinks\";\nexport * from \"./Options/Interfaces/ILinksShadow\";\nexport * from \"./Options/Interfaces/ILinksTriangle\";\n","import { Linker } from \"./Linker\";\nexport async function loadLinksInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesLinks\", (container) => new Linker(container), refresh);\n}\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class PolygonDrawerBase {\n    draw(context, particle, radius) {\n        const start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius), sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides, interiorAngle = Math.PI - (Math.PI * interiorAngleDegrees) / 180;\n        if (!context) {\n            return;\n        }\n        context.beginPath();\n        context.translate(start.x, start.y);\n        context.moveTo(0, 0);\n        for (let i = 0; i < sideCount; i++) {\n            context.lineTo(side.length, 0);\n            context.translate(side.length, 0);\n            context.rotate(interiorAngle);\n        }\n    }\n    getSidesCount(particle) {\n        const polygon = particle.shapeData;\n        return Math.round(getRangeValue(polygon?.sides ?? polygon?.nb_sides ?? 5));\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class PolygonDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius / (particle.sides / 3.5),\n            y: -radius / (2.66 / 3.5),\n        };\n    }\n    getSidesData(particle, radius) {\n        const sides = particle.sides;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * 2.66) / (sides / 3),\n        };\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class TriangleDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / 1.66,\n        };\n    }\n    getSidesCount() {\n        return 3;\n    }\n    getSidesData(particle, radius) {\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: radius * 2,\n        };\n    }\n}\n","import { PolygonDrawer } from \"./PolygonDrawer\";\nimport { TriangleDrawer } from \"./TriangleDrawer\";\nexport async function loadGenericPolygonShape(engine, refresh = true) {\n    await engine.addShape(\"polygon\", new PolygonDrawer(), refresh);\n}\nexport async function loadTriangleShape(engine, refresh = true) {\n    await engine.addShape(\"triangle\", new TriangleDrawer(), refresh);\n}\nexport async function loadPolygonShape(engine, refresh = true) {\n    await loadGenericPolygonShape(engine, refresh);\n    await loadTriangleShape(engine, refresh);\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom, } from \"tsparticles-engine\";\nimport { RotateAnimation } from \"./RotateAnimation\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = \"clockwise\";\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n","import { getRandom, getRangeValue, } from \"tsparticles-engine\";\nimport { Rotate } from \"./Options/Classes/Rotate\";\nfunction updateRotate(particle, delta) {\n    const rotate = particle.rotate, rotateOptions = particle.options.rotate;\n    if (!rotate || !rotateOptions) {\n        return;\n    }\n    const rotateAnimation = rotateOptions.animation, speed = (rotate.velocity ?? 0) * delta.factor, max = 2 * Math.PI, decay = rotate.decay ?? 1;\n    if (!rotateAnimation.enable) {\n        return;\n    }\n    switch (rotate.status) {\n        case \"increasing\":\n            rotate.value += speed;\n            if (rotate.value > max) {\n                rotate.value -= max;\n            }\n            break;\n        case \"decreasing\":\n        default:\n            rotate.value -= speed;\n            if (rotate.value < 0) {\n                rotate.value += max;\n            }\n            break;\n    }\n    if (rotate.velocity && decay !== 1) {\n        rotate.velocity *= decay;\n    }\n}\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: (getRangeValue(rotateOptions.value) * Math.PI) / 180,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (rotateDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.rotate.status = \"decreasing\";\n                break;\n            case \"clockwise\":\n                particle.rotate.status = \"increasing\";\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = 1 - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && rotate.animation.enable && !rotate.path;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source?.rotate);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRotate(particle, delta);\n        particle.rotation = particle.rotate?.value ?? 0;\n    }\n}\n","const fixFactor = Math.sqrt(2);\nexport class SquareDrawer {\n    draw(context, particle, radius) {\n        const fixedRadius = radius / fixFactor, fixedDiameter = fixedRadius * 2;\n        context.rect(-fixedRadius, -fixedRadius, fixedDiameter, fixedDiameter);\n    }\n    getSidesCount() {\n        return 4;\n    }\n}\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class StarDrawer {\n    draw(context, particle, radius) {\n        const sides = particle.sides, inset = particle.starInset ?? 2;\n        context.moveTo(0, 0 - radius);\n        for (let i = 0; i < sides; i++) {\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius * inset);\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius);\n        }\n    }\n    getSidesCount(particle) {\n        const star = particle.shapeData;\n        return Math.round(getRangeValue(star?.sides ?? star?.nb_sides ?? 5));\n    }\n    particleInit(container, particle) {\n        const star = particle.shapeData, inset = getRangeValue(star?.inset ?? 2);\n        particle.starInset = inset;\n    }\n}\n","import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateStrokeColor(particle, delta) {\n    if (!particle.strokeColor || !particle.strokeAnimation) {\n        return;\n    }\n    const { h, s, l } = particle.strokeColor, { h: hAnimation, s: sAnimation, l: lAnimation } = particle.strokeAnimation;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n","import { getHslAnimationFromHsl, getRangeValue, itemFromSingleOrMultiple, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { updateStrokeColor } from \"./Utils\";\nexport class StrokeColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, options = particle.options;\n        const stroke = itemFromSingleOrMultiple(options.stroke, particle.id, options.reduceDuplicates);\n        particle.strokeWidth = getRangeValue(stroke.width) * container.retina.pixelRatio;\n        particle.strokeOpacity = getRangeValue(stroke.opacity ?? 1);\n        particle.strokeAnimation = stroke.color?.animation;\n        const strokeHslColor = rangeColorToHsl(stroke.color) ?? particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const color = particle.strokeAnimation, { strokeColor } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((strokeColor?.h.value !== undefined && strokeColor.h.enable) ||\n                (strokeColor?.s.value !== undefined && strokeColor.s.enable) ||\n                (strokeColor?.l.value !== undefined && strokeColor.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateStrokeColor(particle, delta);\n    }\n}\n","import { executeOnSingleOrMultiple, isInArray, itemFromSingleOrMultiple, loadFont, } from \"tsparticles-engine\";\nexport const validTypes = [\"text\", \"character\", \"char\"];\nexport class TextDrawer {\n    draw(context, particle, radius, opacity) {\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        if (particle.text === undefined) {\n            particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n        }\n        const text = particle.text, style = character.style ?? \"\", weight = character.weight ?? \"400\", size = Math.round(radius) * 2, font = character.font ?? \"Verdana\", fill = particle.fill, offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        context.globalAlpha = opacity;\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (validTypes.find((t) => isInArray(t, options.particles.shape.type))) {\n            const shapeOptions = validTypes\n                .map((t) => options.particles.shape.options[t])\n                .find((t) => !!t), promises = [];\n            executeOnSingleOrMultiple(shapeOptions, (shape) => {\n                promises.push(loadFont(shape.font, shape.weight));\n            });\n            await Promise.all(promises);\n        }\n    }\n    particleInit(container, particle) {\n        if (!particle.shape || !validTypes.includes(particle.shape)) {\n            return;\n        }\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n    }\n}\n","import { initPjs } from \"tsparticles-particles.js\";\nimport { loadBasic } from \"tsparticles-basic\";\nimport { loadEasingQuadPlugin } from \"tsparticles-plugin-easing-quad\";\nimport { loadExternalAttractInteraction } from \"tsparticles-interaction-external-attract\";\nimport { loadExternalBounceInteraction } from \"tsparticles-interaction-external-bounce\";\nimport { loadExternalBubbleInteraction } from \"tsparticles-interaction-external-bubble\";\nimport { loadExternalConnectInteraction } from \"tsparticles-interaction-external-connect\";\nimport { loadExternalGrabInteraction } from \"tsparticles-interaction-external-grab\";\nimport { loadExternalPauseInteraction } from \"tsparticles-interaction-external-pause\";\nimport { loadExternalPushInteraction } from \"tsparticles-interaction-external-push\";\nimport { loadExternalRemoveInteraction } from \"tsparticles-interaction-external-remove\";\nimport { loadExternalRepulseInteraction } from \"tsparticles-interaction-external-repulse\";\nimport { loadExternalSlowInteraction } from \"tsparticles-interaction-external-slow\";\nimport { loadImageShape } from \"tsparticles-shape-image\";\nimport { loadLifeUpdater } from \"tsparticles-updater-life\";\nimport { loadLineShape } from \"tsparticles-shape-line\";\nimport { loadParallaxMover } from \"tsparticles-move-parallax\";\nimport { loadParticlesAttractInteraction } from \"tsparticles-interaction-particles-attract\";\nimport { loadParticlesCollisionsInteraction } from \"tsparticles-interaction-particles-collisions\";\nimport { loadParticlesLinksInteraction } from \"tsparticles-interaction-particles-links\";\nimport { loadPolygonShape } from \"tsparticles-shape-polygon\";\nimport { loadRotateUpdater } from \"tsparticles-updater-rotate\";\nimport { loadSquareShape } from \"tsparticles-shape-square\";\nimport { loadStarShape } from \"tsparticles-shape-star\";\nimport { loadStrokeColorUpdater } from \"tsparticles-updater-stroke-color\";\nimport { loadTextShape } from \"tsparticles-shape-text\";\nexport async function loadSlim(engine, refresh = true) {\n    initPjs(engine);\n    await loadParallaxMover(engine, false);\n    await loadExternalAttractInteraction(engine, false);\n    await loadExternalBounceInteraction(engine, false);\n    await loadExternalBubbleInteraction(engine, false);\n    await loadExternalConnectInteraction(engine, false);\n    await loadExternalGrabInteraction(engine, false);\n    await loadExternalPauseInteraction(engine, false);\n    await loadExternalPushInteraction(engine, false);\n    await loadExternalRemoveInteraction(engine, false);\n    await loadExternalRepulseInteraction(engine, false);\n    await loadExternalSlowInteraction(engine, false);\n    await loadParticlesAttractInteraction(engine, false);\n    await loadParticlesCollisionsInteraction(engine, false);\n    await loadParticlesLinksInteraction(engine, false);\n    await loadEasingQuadPlugin();\n    await loadImageShape(engine, false);\n    await loadLineShape(engine, false);\n    await loadPolygonShape(engine, false);\n    await loadSquareShape(engine, false);\n    await loadStarShape(engine, false);\n    await loadTextShape(engine, false);\n    await loadLifeUpdater(engine, false);\n    await loadRotateUpdater(engine, false);\n    await loadStrokeColorUpdater(engine, false);\n    await loadBasic(engine, refresh);\n}\n","import { ParallaxMover } from \"./ParallaxMover\";\nexport async function loadParallaxMover(engine, refresh = true) {\n    await engine.addMover(\"parallax\", () => new ParallaxMover(), refresh);\n}\n","import { Attractor } from \"./Attractor\";\nexport async function loadExternalAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalAttract\", (container) => new Attractor(engine, container), refresh);\n}\nexport * from \"./Options/Classes/Attract\";\nexport * from \"./Options/Interfaces/IAttract\";\n","import { Bouncer } from \"./Bouncer\";\nexport async function loadExternalBounceInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBounce\", (container) => new Bouncer(container), refresh);\n}\nexport * from \"./Options/Classes/Bounce\";\nexport * from \"./Options/Interfaces/IBounce\";\n","import { Bubbler } from \"./Bubbler\";\nexport async function loadExternalBubbleInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBubble\", (container) => new Bubbler(container), refresh);\n}\nexport * from \"./Options/Classes/BubbleBase\";\nexport * from \"./Options/Classes/BubbleDiv\";\nexport * from \"./Options/Classes/Bubble\";\nexport * from \"./Options/Interfaces/IBubbleBase\";\nexport * from \"./Options/Interfaces/IBubbleDiv\";\nexport * from \"./Options/Interfaces/IBubble\";\n","import { Connector } from \"./Connector\";\nexport async function loadExternalConnectInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalConnect\", (container) => new Connector(container), refresh);\n}\nexport * from \"./Options/Classes/Connect\";\nexport * from \"./Options/Classes/ConnectLinks\";\nexport * from \"./Options/Interfaces/IConnect\";\nexport * from \"./Options/Interfaces/IConnectLinks\";\n","import { Grabber } from \"./Grabber\";\nexport async function loadExternalGrabInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalGrab\", (container) => new Grabber(container), refresh);\n}\nexport * from \"./Options/Classes/Grab\";\nexport * from \"./Options/Classes/GrabLinks\";\nexport * from \"./Options/Interfaces/IGrab\";\nexport * from \"./Options/Interfaces/IGrabLinks\";\n","import { Pauser } from \"./Pauser\";\nexport async function loadExternalPauseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPause\", (container) => new Pauser(container), refresh);\n}\n","import { Pusher } from \"./Pusher\";\nexport async function loadExternalPushInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPush\", (container) => new Pusher(container), refresh);\n}\nexport * from \"./Options/Classes/Push\";\nexport * from \"./Options/Interfaces/IPush\";\n","import { Remover } from \"./Remover\";\nexport async function loadExternalRemoveInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRemove\", (container) => new Remover(container), refresh);\n}\nexport * from \"./Options/Classes/Remove\";\nexport * from \"./Options/Interfaces/IRemove\";\n","import { Repulser } from \"./Repulser\";\nexport async function loadExternalRepulseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRepulse\", (container) => new Repulser(engine, container), refresh);\n}\nexport * from \"./Options/Classes/RepulseBase\";\nexport * from \"./Options/Classes/RepulseDiv\";\nexport * from \"./Options/Classes/Repulse\";\nexport * from \"./Options/Interfaces/IRepulseBase\";\nexport * from \"./Options/Interfaces/IRepulseDiv\";\nexport * from \"./Options/Interfaces/IRepulse\";\n","import { Slower } from \"./Slower\";\nexport async function loadExternalSlowInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalSlow\", (container) => new Slower(container), refresh);\n}\nexport * from \"./Options/Classes/Slow\";\nexport * from \"./Options/Interfaces/ISlow\";\n","import { Attractor } from \"./Attractor\";\nexport async function loadParticlesAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesAttract\", (container) => new Attractor(container), refresh);\n}\n","import { Collider } from \"./Collider\";\nexport async function loadParticlesCollisionsInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesCollisions\", (container) => new Collider(container), refresh);\n}\n","import { addEasing } from \"tsparticles-engine\";\nexport async function loadEasingQuadPlugin() {\n    addEasing(\"ease-in-quad\", (value) => value ** 2);\n    addEasing(\"ease-out-quad\", (value) => 1 - (1 - value) ** 2);\n    addEasing(\"ease-in-out-quad\", (value) => (value < 0.5 ? 2 * value ** 2 : 1 - (-2 * value + 2) ** 2 / 2));\n}\n","import { LineDrawer } from \"./LineDrawer\";\nexport async function loadLineShape(engine, refresh = true) {\n    await engine.addShape(\"line\", new LineDrawer(), refresh);\n}\n","import { SquareDrawer } from \"./SquareDrawer\";\nexport async function loadSquareShape(engine, refresh = true) {\n    await engine.addShape([\"edge\", \"square\"], new SquareDrawer(), refresh);\n}\n","import { StarDrawer } from \"./StarDrawer\";\nexport async function loadStarShape(engine, refresh = true) {\n    await engine.addShape(\"star\", new StarDrawer(), refresh);\n}\n","import { TextDrawer, validTypes } from \"./TextDrawer\";\nexport async function loadTextShape(engine, refresh = true) {\n    await engine.addShape(validTypes, new TextDrawer(), refresh);\n}\n","import { LifeUpdater } from \"./LifeUpdater\";\nexport async function loadLifeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"life\", (container) => new LifeUpdater(container), refresh);\n}\n","import { RotateUpdater } from \"./RotateUpdater\";\nexport async function loadRotateUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"rotate\", (container) => new RotateUpdater(container), refresh);\n}\n","import { StrokeColorUpdater } from \"./StrokeColorUpdater\";\nexport async function loadStrokeColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"strokeColor\", (container) => new StrokeColorUpdater(container), refresh);\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n    constructor() {\n        super();\n        this.mode = \"auto\";\n        this.startValue = \"random\";\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n    }\n}\n","import { Range } from \"./Range\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle) {\n            const rSum = r + range.radius, dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\n            return rSum > dist;\n        }\n        else if (range instanceof Rectangle) {\n            const { width, height } = range.size, edges = Math.pow(distPos.x - width, 2) + Math.pow(distPos.y - height, 2);\n            return (edges <= r ** 2 ||\n                (distPos.x <= r + width && distPos.y <= r + height) ||\n                distPos.x <= width ||\n                distPos.y <= height);\n        }\n        return false;\n    }\n}\n","import { getRandom, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils\";\nimport { isArray, isString, itemFromArray } from \"./Utils\";\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\nexport function addColorManager(manager) {\n    colorManagers.set(manager.key, manager);\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    for (const [, manager] of colorManagers) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed);\n    return result\n        ? {\n            a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n            b: parseInt(result[3], 16),\n            g: parseInt(result[2], 16),\n            r: parseInt(result[1], 16),\n        }\n        : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / 255, g1 = color.g / 255, b1 = color.b / 255, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: 0,\n        l: (max + min) / 2,\n        s: 0,\n    };\n    if (max !== min) {\n        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n    }\n    res.l *= 100;\n    res.s *= 100;\n    res.h *= 60;\n    if (res.h < 0) {\n        res.h += 360;\n    }\n    if (res.h >= 360) {\n        res.h -= 360;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    return stringToRgba(input)?.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const result = { b: 0, g: 0, r: 0 }, hslPercent = {\n        h: hsl.h / 360,\n        l: hsl.l / 100,\n        s: hsl.s / 100,\n    };\n    if (!hslPercent.s) {\n        result.r = result.g = result.b = hslPercent.l;\n    }\n    else {\n        const q = hslPercent.l < 0.5\n            ? hslPercent.l * (1 + hslPercent.s)\n            : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s, p = 2 * hslPercent.l - q;\n        result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n        result.g = hue2rgb(p, q, hslPercent.h);\n        result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n    }\n    result.r = Math.floor(result.r * 255);\n    result.g = Math.floor(result.g * 255);\n    result.b = Math.floor(result.b * 255);\n    return result;\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min ?? 0;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? 1})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? 1})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb({\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / 100) * reduceFactor;\n        colorValue.decay = 1 - getRangeValue(colorAnimation.decay);\n        colorValue.status = \"increasing\";\n        colorValue.loops = 0;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = 0;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * 1000;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n    }\n    else {\n        colorValue.velocity = 0;\n    }\n}\n","export class Range {\n    constructor(x, y) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n    }\n}\n","import { isBoolean, isNumber } from \"./Utils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nlet _random = Math.random;\nconst easings = new Map();\nexport function addEasing(name, easing) {\n    if (easings.get(name)) {\n        return;\n    }\n    easings.set(name, easing);\n}\nexport function getEasing(name) {\n    return easings.get(name) || ((value) => value);\n}\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    return clamp(_random(), 0, 1 - 1e-16);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r);\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = 0;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getValue(options) {\n    const random = options.random, { enable, minimumValue } = isBoolean(random)\n        ? {\n            enable: random,\n            minimumValue: 0,\n        }\n        : random;\n    return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** 2 + dy ** 2) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return (direction * Math.PI) / 180;\n    }\n    switch (direction) {\n        case \"top\":\n            return -Math.PI / 2;\n        case \"top-right\":\n            return -Math.PI / 4;\n        case \"right\":\n            return 0;\n        case \"bottom-right\":\n            return Math.PI / 4;\n        case \"bottom\":\n            return Math.PI / 2;\n        case \"bottom-left\":\n            return (3 * Math.PI) / 4;\n        case \"left\":\n            return Math.PI;\n        case \"top-left\":\n            return (-3 * Math.PI) / 4;\n        case \"inside\":\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case \"outside\":\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * Math.PI * 2;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position && data.position.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / 100,\n            y: (data.position.y * data.size.height) / 100,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * 100) * data.size.width) / 100,\n        y: ((data.position?.y ?? getRandom() * 100) * data.size.height) / 100,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    return input ? (input.endsWith(\"%\") ? parseFloat(input) / 100 : parseFloat(input)) : 1;\n}\n","import { Circle } from \"./Circle\";\nimport { Range } from \"./Range\";\nexport class Rectangle extends Range {\n    constructor(x, y, width, height) {\n        super(x, y);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = (particle) => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw && updater.afterDraw(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw && updater.beforeDraw(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize && plugin.resize();\n            }\n        };\n        this._getPluginParticleColors = (particle) => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n            if (coverRgb) {\n                const coverColor = {\n                    ...coverRgb,\n                    a: cover.opacity,\n                };\n                this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                const trail = options.particles.move.trail;\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity: 1 / trail.length,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity: 1 / trail.length,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = (baseColor) => {\n            this.draw((ctx) => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw((ctx) => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver((observer) => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver((observer) => observer.observe(element, { attributes: true }));\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            const style = element.style;\n            style.position = originalStyle.position;\n            style.zIndex = originalStyle.zIndex;\n            style.top = originalStyle.top;\n            style.left = originalStyle.left;\n            style.width = originalStyle.width;\n            style.height = originalStyle.height;\n        };\n        this._safeMutationObserver = (callback) => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const priority = \"important\", style = element.style;\n            style.setProperty(\"position\", \"fixed\", priority);\n            style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n            style.setProperty(\"top\", \"0\", priority);\n            style.setProperty(\"left\", \"0\", priority);\n            style.setProperty(\"width\", \"100%\", priority);\n            style.setProperty(\"height\", \"100%\", priority);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element && element.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? 1, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = safeMutationObserver((records) => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw((ctx) => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, (mode) => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                setTimeout(() => this._mouseTouchFinish(), 500);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n            if (theme && theme.default.auto) {\n                container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document && document.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.getAnimationStatus()) {\n                    container.play(true);\n                }\n                else {\n                    container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = async () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            this._resizeTimeout = setTimeout(async () => {\n                const canvas = this.container.canvas;\n                canvas && (await canvas.windowResize());\n            }, this.container.actualOptions.interactivity.events.resize.delay * 1000);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            const interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === \"window\") {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === \"parent\" && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = (add) => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver(async (entries) => {\n                    const entry = entries.find((e) => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    await this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = (e) => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity || !interactivity.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === \"parent\") {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - 1], canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? 0),\n                        y: lastTouch.clientY - (canvasRect.top ?? 0),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { BackgroundMaskCover } from \"./BackgroundMaskCover\";\nimport { isString } from \"../../../Utils/Utils\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover;\n            const color = (isString(data.cover) ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","export class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","export class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = \"circle\";\n    }\n    get el() {\n        return this.elementId;\n    }\n    set el(value) {\n        this.elementId = value;\n    }\n    get elementId() {\n        return this.ids;\n    }\n    set elementId(value) {\n        this.ids = value;\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const ids = data.ids ?? data.elementId ?? data.el;\n        if (ids !== undefined) {\n            this.ids = ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","export class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","export class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean } from \"../../../../Utils/Utils\";\nimport { ClickEvent } from \"./ClickEvent\";\nimport { DivEvent } from \"./DivEvent\";\nimport { HoverEvent } from \"./HoverEvent\";\nimport { ResizeEvent } from \"./ResizeEvent\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    get onclick() {\n        return this.onClick;\n    }\n    set onclick(value) {\n        this.onClick = value;\n    }\n    get ondiv() {\n        return this.onDiv;\n    }\n    set ondiv(value) {\n        this.onDiv = value;\n    }\n    get onhover() {\n        return this.onHover;\n    }\n    set onhover(value) {\n        this.onHover = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.onClick.load(data.onClick ?? data.onclick);\n        const onDiv = data.onDiv ?? data.ondiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, (t) => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load(data.onHover ?? data.onhover);\n        if (isBoolean(data.resize)) {\n            this.resize.enable = data.resize;\n        }\n        else {\n            this.resize.load(data.resize);\n        }\n    }\n}\n","export class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (!this._container) {\n            return;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (!interactors) {\n            return;\n        }\n        for (const interactor of interactors) {\n            if (!interactor.loadModeOptions) {\n                continue;\n            }\n            interactor.loadModeOptions(this, data);\n        }\n    }\n}\n","import { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = \"window\";\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    get detect_on() {\n        return this.detectsOn;\n    }\n    set detect_on(value) {\n        this.detectsOn = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const detectsOn = data.detectsOn ?? data.detect_on;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class ManualParticle {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.position) {\n            this.position = {\n                x: data.position.x ?? 50,\n                y: data.position.y ?? 50,\n                mode: data.position.mode ?? \"percent\",\n            };\n        }\n        if (data.options) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = \"canvas\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.maxWidth !== undefined) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (data.mode !== undefined) {\n            if (data.mode === \"screen\") {\n                this.mode = \"screen\";\n            }\n            else {\n                this.mode = \"canvas\";\n            }\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","export class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = \"any\";\n        this.value = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault\";\nimport { deepExtend } from \"../../../Utils/Utils\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ColorAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.offset = 0;\n        this.speed = 1;\n        this.delay = 0;\n        this.decay = 0;\n        this.sync = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nimport { HslAnimation } from \"./HslAnimation\";\nimport { OptionsColor } from \"./OptionsColor\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","export class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","export class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { CollisionsAbsorb } from \"./CollisionsAbsorb\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.maxSpeed = 50;\n        this.mode = \"bounce\";\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    get rotateX() {\n        return this.rotate.x;\n    }\n    set rotateX(value) {\n        this.rotate.x = value;\n    }\n    get rotateY() {\n        return this.rotate.y;\n    }\n    set rotateY(value) {\n        this.rotate.y = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const rotateX = data.rotate?.x ?? data.rotateX;\n        if (rotateX !== undefined) {\n            this.rotate.x = rotateX;\n        }\n        const rotateY = data.rotate?.y ?? data.rotateY;\n        if (rotateY !== undefined) {\n            this.rotate.y = rotateY;\n        }\n    }\n}\n","export class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = \"percent\";\n        this.radius = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom\";\nimport { deepExtend } from \"../../../../../Utils/Utils\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor\";\nexport class MoveTrailFill {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n","import { MoveTrailFill } from \"./MoveTrailFill\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    get fillColor() {\n        return this.fill.color;\n    }\n    set fillColor(value) {\n        this.fill.load({ color: value });\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined || data.fillColor !== undefined) {\n            this.fill.load(data.fill || { color: data.fillColor });\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","export class OutModes {\n    constructor() {\n        this.default = \"out\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = data.bottom ?? data.default;\n        this.left = data.left ?? data.default;\n        this.right = data.right ?? data.default;\n        this.top = data.top ?? data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.position) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n","import { isNumber, isObject } from \"../../../../Utils/Utils\";\nimport { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveCenter } from \"./MoveCenter\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = \"none\";\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(_) {\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes ?? data.outMode ?? data.out_mode;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path ?? data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 2;\n    }\n    get opacity_min() {\n        return this.minimumValue;\n    }\n    set opacity_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.opacity_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.opacity_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Opacity extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","export class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    get area() {\n        return this.width;\n    }\n    set area(value) {\n        this.width = value;\n    }\n    get factor() {\n        return this.height;\n    }\n    set factor(value) {\n        this.height = value;\n    }\n    get value_area() {\n        return this.area;\n    }\n    set value_area(value) {\n        this.area = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = data.width ?? data.area ?? data.value_area;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = data.height ?? data.factor;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = 0;\n        this.value = 0;\n    }\n    get max() {\n        return this.limit;\n    }\n    set max(value) {\n        this.limit = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.density.load(data.density);\n        const limit = data.limit ?? data.max;\n        if (limit !== undefined) {\n            this.limit = limit;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend, isArray } from \"../../../../Utils/Utils\";\nconst charKey = \"character\", charAltKey = \"char\", imageKey = \"image\", imageAltKey = \"images\", polygonKey = \"polygon\", polygonAltKey = \"star\";\nexport class Shape {\n    constructor() {\n        this.loadShape = (item, mainKey, altKey, altOverride) => {\n            if (!item) {\n                return;\n            }\n            const itemIsArray = isArray(item), emptyValue = itemIsArray ? [] : {}, mainDifferentValues = itemIsArray !== isArray(this.options[mainKey]), altDifferentValues = itemIsArray !== isArray(this.options[altKey]);\n            if (mainDifferentValues) {\n                this.options[mainKey] = emptyValue;\n            }\n            if (altDifferentValues && altOverride) {\n                this.options[altKey] = emptyValue;\n            }\n            this.options[mainKey] = deepExtend(this.options[mainKey] ?? emptyValue, item);\n            if (!this.options[altKey] || altOverride) {\n                this.options[altKey] = deepExtend(this.options[altKey] ?? emptyValue, item);\n            }\n        };\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = \"circle\";\n    }\n    get character() {\n        return (this.options[charKey] ?? this.options[charAltKey]);\n    }\n    set character(value) {\n        this.options[charAltKey] = this.options[charKey] = value;\n    }\n    get custom() {\n        return this.options;\n    }\n    set custom(value) {\n        this.options = value;\n    }\n    get image() {\n        return (this.options[imageKey] ?? this.options[imageAltKey]);\n    }\n    set image(value) {\n        this.options[imageAltKey] = this.options[imageKey] = value;\n    }\n    get images() {\n        return this.image;\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get polygon() {\n        return (this.options[polygonKey] ?? this.options[polygonAltKey]);\n    }\n    set polygon(value) {\n        this.options[polygonAltKey] = this.options[polygonKey] = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(_value) {\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const options = data.options ?? data.custom;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n                }\n            }\n        }\n        this.loadShape(data.character, charKey, charAltKey, true);\n        this.loadShape(data.polygon, polygonKey, polygonAltKey, false);\n        this.loadShape(data.image ?? data.images, imageKey, imageAltKey, true);\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class SizeAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 5;\n    }\n    get size_min() {\n        return this.minimumValue;\n    }\n    set size_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.size_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.size_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { SizeAnimation } from \"./SizeAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Size extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.random.minimumValue = 1;\n        this.value = 3;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils\";\nimport { AnimatableColor } from \"../AnimatableColor\";\nimport { Collisions } from \"./Collisions/Collisions\";\nimport { Move } from \"./Move/Move\";\nimport { Opacity } from \"./Opacity/Opacity\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber\";\nimport { Shadow } from \"./Shadow\";\nimport { Shape } from \"./Shape/Shape\";\nimport { Size } from \"./Size/Size\";\nimport { Stroke } from \"./Stroke\";\nimport { ZIndex } from \"./ZIndex/ZIndex\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        if (data.groups !== undefined) {\n            for (const group in data.groups) {\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n                }\n            }\n        }\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        const collisions = data.move?.collisions ?? data.move?.bounce;\n        if (collisions !== undefined) {\n            this.collisions.enable = collisions;\n        }\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = data.stroke ?? data.shape?.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, (t) => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.plugins.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { deepExtend, executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { Background } from \"./Background/Background\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask\";\nimport { FullScreen } from \"./FullScreen/FullScreen\";\nimport { Interactivity } from \"./Interactivity/Interactivity\";\nimport { ManualParticle } from \"./ManualParticle\";\nimport { Responsive } from \"./Responsive\";\nimport { Theme } from \"./Theme/Theme\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class Options {\n    constructor(engine, container) {\n        this._findDefaultTheme = (mode) => {\n            return (this.themes.find((theme) => theme.default.value && theme.default.mode === mode) ??\n                this.themes.find((theme) => theme.default.value && theme.default.mode === \"any\"));\n        };\n        this._importPreset = (preset) => {\n            this.load(this._engine.plugins.getPreset(preset));\n        };\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    get backgroundMode() {\n        return this.fullScreen;\n    }\n    set backgroundMode(value) {\n        this.fullScreen.load(value);\n    }\n    get fps_limit() {\n        return this.fpsLimit;\n    }\n    set fps_limit(value) {\n        this.fpsLimit = value;\n    }\n    get retina_detect() {\n        return this.detectRetina;\n    }\n    set retina_detect(value) {\n        this.detectRetina = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, (preset) => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = data.detectRetina ?? data.retina_detect;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = data.fpsLimit ?? data.fps_limit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = data.fullScreen ?? data.backgroundMode;\n        if (isBoolean(fullScreen)) {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles) {\n            this.manualParticles = data.manualParticles.map((t) => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.plugins.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find((t) => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = this._findDefaultTheme(\"dark\")?.name;\n        this.defaultThemes.light = this._findDefaultTheme(\"light\")?.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find((t) => t.mode === \"screen\" && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions?.options);\n        return responsiveOptions?.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find((theme) => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch && mediaMatch.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? \"dark\" : \"light\");\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = engine.plugins.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    async externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && (await interactor.interact(delta));\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode && interactor.handleClickMode(mode);\n        }\n    }\n    init() {\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    async particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && (await interactor.interact(particle, delta));\n        }\n    }\n    async reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && interactor.reset(particle);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && interactor.reset(particle);\n        }\n    }\n}\n","import { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nconst fixOutMode = (data) => {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * 2;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n};\nexport class Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = 0) => {\n            for (const [, plugin] of container.plugins) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-horizontal\"],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-vertical\"],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                return this._calcPosition(container, undefined, zIndex, tryCount + 1);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n                return res;\n            }\n            const rad = (Math.PI / 180) * getRangeValue(moveOptions.angle.value), radOffset = (Math.PI / 180) * getRangeValue(moveOptions.angle.offset), range = {\n                left: radOffset - rad / 2,\n                right: radOffset + rad / 2,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = 0) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries;\n            if (retries >= 0 && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find((particle) => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = (color) => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1, backSum = this.roll.horizontal ? Math.PI / 2 : 0, rolled = Math.floor(((this.roll.angle ?? 0) + backSum) / (Math.PI / backFactor)) % 2;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = (position) => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value);\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? 0,\n                mode: this.options.move.center.mode ?? \"percent\",\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case \"inside\":\n                    this.outType = \"inside\";\n                    break;\n                case \"outside\":\n                    this.outType = \"outside\";\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._loadShapeData = (shapeOptions, reduceDuplicates) => {\n            const shapeData = shapeOptions.options[this.shape];\n            if (!shapeData) {\n                return;\n            }\n            return deepExtend({\n                close: shapeOptions.close,\n                fill: shapeOptions.fill,\n            }, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\n        };\n        this._engine = engine;\n        this.init(id, position, overrideOptions, group);\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        for (const updater of container.particles.updaters) {\n            if (updater.particleDestroyed) {\n                updater.particleDestroyed(this, override);\n            }\n        }\n        if (pathGenerator) {\n            pathGenerator.reset(this);\n        }\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.fill = true;\n        this.pathRotation = false;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const shapeOptions = particlesOptions.shape;\n        if (overrideOptions && overrideOptions.shape && overrideOptions.shape.type) {\n            const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n            if (shape) {\n                this.shape = shape;\n                shapeOptions.load(overrideOptions.shape);\n            }\n        }\n        this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.fill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.close = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getValue(pathOptions.delay) * 1000;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = this._engine.plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer && drawer.loadShape) {\n            drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of container.particles.movers) {\n            mover.init && mover.init(this);\n        }\n        if (drawer && drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.particleCreated && plugin.particleCreated(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset && updater.reset(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < 4; i++) {\n                this._subs.push(new QuadTree(new Rectangle(x + (width / 2) * (i % 2), y + (height / 2) * (Math.round(i / 2) - (i % 2)), width / 2, height / 2), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some((sub) => sub.insert(point));\n    }\n    query(range, check, found) {\n        const res = found || [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                sub.query(range, check, res);\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { getLogger, getPosition } from \"../Utils/Utils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { errorPrefix } from \"./Utils/Constants\";\nconst qTreeCapacity = 4;\nconst qTreeRectangle = (canvasSize) => {\n    return new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._applyDensity = (options, manualCount, group) => {\n            if (!options.number.density?.enable) {\n                return;\n            }\n            const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter((t) => t.group === group).length);\n            this.limit = numberOptions.limit * densityFactor;\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = (densityOptions) => {\n            const container = this._container;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return 1;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this.pool.pop();\n                if (particle) {\n                    particle.init(this._nextId, position, overrideOptions, group);\n                }\n                else {\n                    particle = new Particle(this._engine, this._nextId, this._container, position, overrideOptions, group);\n                }\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(\"particleAdded\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n                return;\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            particle.destroy(override);\n            const zIdx = this._zArray.indexOf(particle);\n            this._array.splice(index, 1);\n            this._zArray.splice(zIdx, 1);\n            this.pool.push(particle);\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this.pool = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = this._engine.plugins.getMovers(container, true);\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(particle.position ? getPosition(particle.position, container.canvas.size) : undefined, particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const container = this._container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this._container;\n        container.canvas.clear();\n        await this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    init() {\n        const container = this._container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        let handled = false;\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n        this._interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this._interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (index < 0 || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            this._removeParticle(i--, group, override) && deleted++;\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups;\n        for (const group in groups) {\n            this._applyDensity(groups[group], 0, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.update && plugin.update(delta);\n        }\n        for (const particle of this._array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this._interactionManager.reset(particle);\n            for (const [, plugin] of this._container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                if (plugin.particleUpdate) {\n                    plugin.particleUpdate(particle, delta);\n                }\n            }\n            for (const mover of this.movers) {\n                mover.isEnabled(particle) && mover.move(particle, delta);\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            this.pool.push(...particlesToDelete);\n        }\n        await this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n        if (this.needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = zArray[zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = 1;\n        this.reduceFactor = 1;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        this.reduceFactor = 1;\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { getLogger, isFunction } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = 60, smooth = false) {\n    return {\n        value,\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) => p.velocity,\n    init: () => {\n    },\n    update: () => {\n    },\n    reset: () => {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._intersectionManager = (entries) => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                (entry.isIntersecting ? this.play : this.pause)();\n            }\n        };\n        this._nextFrame = async (timestamp) => {\n            try {\n                if (!this.smooth &&\n                    this.lastFrameTime !== undefined &&\n                    timestamp < this.lastFrameTime + 1000 / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this.lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this.lastFrameTime, this.fpsLimit, this.smooth);\n                this.addLifeTime(delta.value);\n                this.lastFrameTime = timestamp;\n                if (delta.value > 1000) {\n                    this.draw(false);\n                    return;\n                }\n                await this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.getAnimationStatus()) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator ?? defaultPathGenerator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            drawer.destroy && drawer.destroy(this);\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = requestAnimationFrame(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this._nextFrame(timestamp);\n        });\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode && plugin.handleClickMode(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n        this._lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.drawers) {\n            drawer.init && (await drawer.init(this));\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.init && (await plugin.init());\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup && plugin.particlesSetup();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause && plugin.pause();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = { ...defaultPathGenerator };\n        if (isFunction(pathOrGenerator)) {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            this._delayTimeout = setTimeout(async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    plugin.start && (await plugin.start());\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            }, this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop && plugin.stop();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n","export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners && listeners.forEach((handler) => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < 0) {\n            return;\n        }\n        if (length === 1) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, 1);\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../Utils/Utils\";\nfunction getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = [...initializers.values()].map((t) => t(container));\n        map.set(container, res);\n    }\n    return res;\n}\nexport class Plugins {\n    constructor(engine) {\n        this._engine = engine;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this._initializers.interactors.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this._initializers.movers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this._initializers.updaters.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        !this.getPathGenerator(type) && this.pathGenerators.set(type, pathGenerator);\n    }\n    addPlugin(plugin) {\n        !this.getPlugin(plugin.id) && this.plugins.push(plugin);\n    }\n    addPreset(presetKey, options, override = false) {\n        (override || !this.getPreset(presetKey)) && this.presets.set(presetKey, options);\n    }\n    addShapeDrawer(types, drawer) {\n        executeOnSingleOrMultiple(types, (type) => {\n            !this.getShapeDrawer(type) && this.drawers.set(type, drawer);\n        });\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            plugin.needsPlugin(container.actualOptions) && res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            updater.loadOptions && updater.loadOptions(options, ...sourceOptions);\n        }\n    }\n}\n","import { errorPrefix, generatedAttribute } from \"./Utils/Constants\";\nimport { getLogger, isBoolean, isFunction, isNumber, isString, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { Container } from \"./Container\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher\";\nimport { Plugins } from \"./Utils/Plugins\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nfunction isParamsEmpty(params) {\n    return !params.id && !params.element && !params.url && !params.options;\n}\nfunction isParams(obj) {\n    return !isParamsEmpty(obj);\n}\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = new Plugins(this);\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get version() {\n        return \"2.12.0\";\n    }\n    addConfig(nameOrConfig, config) {\n        if (isString(nameOrConfig)) {\n            if (config) {\n                config.name = nameOrConfig;\n                this._configs.set(nameOrConfig, config);\n            }\n        }\n        else {\n            this._configs.set(nameOrConfig.name ?? \"default\", nameOrConfig);\n        }\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this.plugins.addInteractor(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this.plugins.addParticleMover(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this.plugins.addParticleUpdater(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        this.plugins.addPathGenerator(name, generator);\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        this.plugins.addPlugin(plugin);\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        this.plugins.addPreset(preset, options, override);\n        await this.refresh(refresh);\n    }\n    async addShape(shape, drawer, initOrRefresh, afterEffectOrRefresh, destroyOrRefresh, refresh = true) {\n        let customDrawer;\n        let realRefresh = refresh, realInit, realAfterEffect, realDestroy;\n        if (isBoolean(initOrRefresh)) {\n            realRefresh = initOrRefresh;\n            realInit = undefined;\n        }\n        else {\n            realInit = initOrRefresh;\n        }\n        if (isBoolean(afterEffectOrRefresh)) {\n            realRefresh = afterEffectOrRefresh;\n            realAfterEffect = undefined;\n        }\n        else {\n            realAfterEffect = afterEffectOrRefresh;\n        }\n        if (isBoolean(destroyOrRefresh)) {\n            realRefresh = destroyOrRefresh;\n            realDestroy = undefined;\n        }\n        else {\n            realDestroy = destroyOrRefresh;\n        }\n        if (isFunction(drawer)) {\n            customDrawer = {\n                afterEffect: realAfterEffect,\n                destroy: realDestroy,\n                draw: drawer,\n                init: realInit,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        this.plugins.addShapeDrawer(shape, customDrawer);\n        await this.refresh(realRefresh);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this._domArray;\n    }\n    domItem(index) {\n        const dom = this.dom(), item = dom[index];\n        if (!item || item.destroyed) {\n            dom.splice(index, 1);\n            return;\n        }\n        return item;\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    async load(tagIdOrOptionsOrParams, options) {\n        return this.loadFromArray(tagIdOrOptionsOrParams, options);\n    }\n    async loadFromArray(tagIdOrOptionsOrParams, optionsOrIndex, index) {\n        let params;\n        if (!isParams(tagIdOrOptionsOrParams)) {\n            params = {};\n            if (isString(tagIdOrOptionsOrParams)) {\n                params.id = tagIdOrOptionsOrParams;\n            }\n            else {\n                params.options = tagIdOrOptionsOrParams;\n            }\n            if (isNumber(optionsOrIndex)) {\n                params.index = optionsOrIndex;\n            }\n            else {\n                params.options = optionsOrIndex ?? params.options;\n            }\n            params.index = index ?? params.index;\n        }\n        else {\n            params = tagIdOrOptionsOrParams;\n        }\n        return this._loadParams(params);\n    }\n    async loadJSON(tagId, pathConfigJson, index) {\n        let url, id;\n        if (isNumber(pathConfigJson) || pathConfigJson === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = pathConfigJson;\n        }\n        return this._loadParams({ id: id, url, index });\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        this.dom().forEach((t) => t.refresh());\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    async set(id, element, options, index) {\n        const params = { index };\n        if (isString(id)) {\n            params.id = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (element instanceof HTMLElement) {\n            params.element = element;\n        }\n        else {\n            params.options = element;\n        }\n        if (isNumber(options)) {\n            params.index = options;\n        }\n        else {\n            params.options = options ?? params.options;\n        }\n        return this._loadParams(params);\n    }\n    async setJSON(id, element, pathConfigJson, index) {\n        const params = {};\n        if (id instanceof HTMLElement) {\n            params.element = id;\n            params.url = element;\n            params.index = pathConfigJson;\n        }\n        else {\n            params.id = id;\n            params.element = element;\n            params.url = pathConfigJson;\n            params.index = index;\n        }\n        return this._loadParams(params);\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (!dom.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n    async _loadParams(params) {\n        const id = params.id ?? `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        let domContainer = params.element ?? document.getElementById(id);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = id;\n            document.body.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this.dom(), oldIndex = dom.findIndex((v) => v.id === id);\n        if (oldIndex >= 0) {\n            const old = this.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? hslaToRgba({\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n}\n","import { init } from \"./init\";\nimport { isSsr } from \"./Utils/Utils\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports\";\nexport * from \"./export-types\";\nexport { tsParticles };\n","import { Engine } from \"./Core/Engine\";\nimport { HslColorManager } from \"./Utils/HslColorManager\";\nimport { RgbColorManager } from \"./Utils/RgbColorManager\";\nimport { addColorManager } from \"./Utils/ColorUtils\";\nexport function init() {\n    const rgbColorManager = new RgbColorManager(), hslColorManager = new HslColorManager();\n    addColorManager(rgbColorManager);\n    addColorManager(hslColorManager);\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n","export const generatedAttribute = \"generated\";\nexport const mouseDownEvent = \"pointerdown\";\nexport const mouseUpEvent = \"pointerup\";\nexport const mouseLeaveEvent = \"pointerleave\";\nexport const mouseOutEvent = \"pointerout\";\nexport const mouseMoveEvent = \"pointermove\";\nexport const touchStartEvent = \"touchstart\";\nexport const touchEndEvent = \"touchend\";\nexport const touchMoveEvent = \"touchmove\";\nexport const touchCancelEvent = \"touchcancel\";\nexport const resizeEvent = \"resize\";\nexport const visibilityChangeEvent = \"visibilitychange\";\nexport const errorPrefix = \"tsParticles - Error\";\n","import { isArray, isString } from \"../../Utils/Utils\";\nexport class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if (data?.value === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\n","import { Vector3d } from \"./Vector3d\";\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, 0);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, } from \"./NumberUtils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data;\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, (selector) => {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some((t) => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    return value === array || (isArray(array) && array.indexOf(value) > -1);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    return areBoundsInside(calculateBounds(point, radius ?? 0), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === \"bottom\") {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === \"left\")) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === \"right\")) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === \"top\")) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) && Array.isArray(value)\n                    ? value.map((v) => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, (t) => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, (div) => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, (selector) => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, (div) => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getValue(p.options.bounce.horizontal), getValue(p.options.bounce.vertical)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1);\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < 0) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getValue(particle.options.bounce.horizontal),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getValue(particle.options.bounce.vertical),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, 0);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.find((t, index) => callback(t, index)) : callback(obj, 0) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * 1000,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    };\n    if (animationOptions.enable) {\n        res.decay = 1 - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case \"increase\":\n                res.status = \"increasing\";\n                break;\n            case \"decrease\":\n                res.status = \"decreasing\";\n                break;\n            case \"random\":\n                res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                break;\n        }\n        const autoStatus = animationOptions.mode === \"auto\";\n        switch (animationOptions.startValue) {\n            case \"min\":\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = \"increasing\";\n                }\n                break;\n            case \"max\":\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = \"decreasing\";\n                }\n                break;\n            case \"random\":\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === \"percent\";\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / 100) * canvasSize.width,\n            y: (positionOrSize.y / 100) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / 100) * canvasSize.width,\n            height: (positionOrSize.height / 100) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nexport function isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n    return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n    return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n    return Array.isArray(arg);\n}\n","export class Random {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n    }\n}\n","import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions\";\nimport { Random } from \"./Random\";\nimport { isBoolean } from \"../../Utils/Utils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ValueWithRandom {\n    constructor() {\n        this.random = new Random();\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (isBoolean(data.random)) {\n            this.random.enable = data.random;\n        }\n        else {\n            this.random.load(data.random);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value, this.random.enable ? this.random.minimumValue : undefined);\n        }\n    }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new AnimationOptions();\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RangedAnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, 0, 0, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data;\n    const pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, transformData = {\n        a: rotateData.cos * (transform.a ?? 1),\n        b: rotateData.sin * (transform.b ?? 1),\n        c: -rotateData.sin * (transform.c ?? 1),\n        d: rotateData.cos * (transform.d ?? 1),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    context.beginPath();\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = particle.strokeWidth ?? 0;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (strokeWidth > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.globalCompositeOperation = \"source-over\";\n    context.setTransform(1, 0, 0, 1, 0, 0);\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer || !drawer.afterEffect) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n","const isObject = (val) => typeof val === \"object\" && val !== null;\nexport function deepCompare(obj1, obj2, excludeKeyFn = () => false) {\n    if (!isObject(obj1) || !isObject(obj2)) {\n        return obj1 === obj2;\n    }\n    const keys1 = Object.keys(obj1).filter(key => !excludeKeyFn(key)), keys2 = Object.keys(obj2).filter(key => !excludeKeyFn(key));\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const value1 = obj1[key], value2 = obj2[key];\n        if (isObject(value1) && isObject(value2)) {\n            if (value1 === obj2 && value2 === obj1) {\n                continue;\n            }\n            if (!deepCompare(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (Array.isArray(value1) && Array.isArray(value2)) {\n            if (!deepCompareArrays(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (value1 !== value2) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction deepCompareArrays(arr1, arr2, excludeKeyFn) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        const val1 = arr1[i], val2 = arr2[i];\n        if (Array.isArray(val1) && Array.isArray(val2)) {\n            if (!deepCompareArrays(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (isObject(val1) && isObject(val2)) {\n            if (!deepCompare(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (val1 !== val2) {\n            return false;\n        }\n    }\n    return true;\n}\n","import React, { Component } from \"react\";\nimport { tsParticles } from \"tsparticles-engine\";\nimport { deepCompare } from \"./Utils\";\nconst defaultId = \"tsparticles\";\nclass Particles extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            init: false,\n            library: undefined,\n        };\n    }\n    destroy() {\n        if (!this.state.library) {\n            return;\n        }\n        this.state.library.destroy();\n        this.setState({\n            library: undefined,\n        });\n    }\n    shouldComponentUpdate(nextProps) {\n        const nextOptions = nextProps.options ?? nextProps.params, currentOptions = this.props.options ?? this.props.params;\n        return (nextProps.url !== this.props.url ||\n            nextProps.id !== this.props.id ||\n            nextProps.canvasClassName !== this.props.canvasClassName ||\n            nextProps.className !== this.props.className ||\n            nextProps.height !== this.props.height ||\n            nextProps.width !== this.props.width ||\n            !deepCompare(nextProps.style, this.props.style) ||\n            nextProps.init !== this.props.init ||\n            nextProps.loaded !== this.props.loaded ||\n            !deepCompare(nextOptions, currentOptions, key => key.startsWith(\"_\")));\n    }\n    componentDidUpdate() {\n        this.refresh();\n    }\n    forceUpdate() {\n        this.refresh().then(() => {\n            super.forceUpdate();\n        });\n    }\n    componentDidMount() {\n        (async () => {\n            if (this.props.init) {\n                await this.props.init(tsParticles);\n            }\n            this.setState({\n                init: true,\n            }, async () => {\n                await this.loadParticles();\n            });\n        })();\n    }\n    componentWillUnmount() {\n        this.destroy();\n    }\n    render() {\n        const { width, height, className, canvasClassName, id } = this.props;\n        return (React.createElement(\"div\", { className: className, id: id },\n            React.createElement(\"canvas\", { className: canvasClassName, style: {\n                    ...this.props.style,\n                    width,\n                    height,\n                } })));\n    }\n    async refresh() {\n        this.destroy();\n        await this.loadParticles();\n    }\n    async loadParticles() {\n        if (!this.state.init) {\n            return;\n        }\n        const id = this.props.id ?? Particles.defaultProps.id ?? defaultId, container = await tsParticles.load({\n            url: this.props.url,\n            id,\n            options: this.props.options ?? this.props.params,\n        });\n        if (this.props.container) {\n            this.props.container.current = container;\n        }\n        this.setState({\n            library: container,\n        });\n        if (this.props.loaded) {\n            await this.props.loaded(container);\n        }\n    }\n}\nParticles.defaultProps = {\n    width: \"100%\",\n    height: \"100%\",\n    options: {},\n    style: {},\n    url: undefined,\n    id: defaultId,\n};\nexport default Particles;\n","import Particles from \"./Particles\";\nexport default Particles;\nexport { Particles };\n","import { errorPrefix } from \"./Constants\";\nimport { isNumber } from \"../../Utils/Utils\";\nexport class Vector3d {\n    constructor(xOrCoords, y, z) {\n        this._updateFromAngle = (angle, length) => {\n            this.x = Math.cos(angle) * length;\n            this.y = Math.sin(angle) * length;\n        };\n        if (!isNumber(xOrCoords) && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : 0;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z ?? 0;\n        }\n        else {\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n        }\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this._updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this._updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    normalize() {\n        const length = this.length;\n        if (length != 0) {\n            this.multTo(1.0 / length);\n        }\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : 0;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n}\n"],"names":["Particles","init","options","_options$color","_options$minDistance","_options$connectParti","_options$speed","_options$maxParticles","_options$sizeVariatio","_options$responsive","particles","selector","Error","el","document","querySelector","tsParticles","set","replace","fullScreen","enable","color","value","links","distance","minDistance","connectParticles","move","speed","number","maxParticles","size","min","max","sizeVariations","responsive","map","_responsive$options","_responsive$options2","_responsive$options3","_responsive$options4","_responsive$options5","maxWidth","breakpoint","then","container","_container","destroy","this","pauseAnimation","pause","resumeAnimation","play","initPjs","engine","particlesJS","pJSDom","tagId","load","pathConfigJson","callback","loadJSON","catch","undefined","setOnClickHandler","dom","initParticlesJS","window","particle","moveOptions","moveSpeed","maxSpeed","moveDrift","delta","_particle$pathGenerat","particlesOptions","pathOptions","path","lastPathTime","pathDelay","pathGenerator","generate","velocity","addTo","clamp","x","y","applyPath","gravityOptions","gravity","gravityFactor","inverse","factor","acceleration","decay","moveDecay","multTo","mult","zIndexOptions","zIndex","zVelocityFactor","zIndexFactor","velocityRate","position","vibrate","Math","sin","cos","BaseMover","constructor","_initSpin","_spinOptions$position","spinOptions","spin","spinPos","spinCenter","canvas","width","height","pos","getPosition","getDistance","spinAcceleration","getRangeValue","retina","pixelRatio","center","direction","angle","radius","isEnabled","destroyed","_particle$retina","_particle$retina$move","_particle$retina2","_particle$retina2$mov","_particle$retina$maxS","particleOptions","pxRatio","slowFactor","slow","inRange","getProximitySpeedFactor","baseSpeed","reduceFactor","drift","maxSize","getRangeMax","getRadius","updateFunc","maxCanvasSize","initialPosition","dx","dy","getDistances","dxFixed","abs","dyFixed","maxDistance","hDistance","horizontal","vDistance","vertical","misplaced","vel","getRandom","applyDistance","CircleDrawer","draw","context","circleRange","PI","arc","getSidesCount","particleInit","_shapeData$angle","shapeData","isObject","updateColorValue","colorValue","valueAnimation","decrease","_colorValue$maxLoops","_colorValue$loops","_colorValue$maxLoops2","_colorValue$delayTime","_colorValue$delayTime2","_colorValue$delayTime3","_colorValue$delayTime4","_colorValue$velocity","_colorValue$decay","maxLoops","loops","time","delayTime","offset","randomInRange","status","ColorUpdater","hslColor","rangeColorToHsl","id","reduceDuplicates","getHslAnimationFromHsl","animation","h","hAnimation","s","sAnimation","l","lAnimation","spawning","update","updateColor","OpacityUpdater","opacityOptions","opacity","initParticleNumericAnimationValue","opacityAnimation","sync","_particle$opacity$max","_particle$opacity$max2","_particle$opacity$loo","_particle$opacity$max3","reset","_data$maxLoops","_data$loops","_data$maxLoops2","_data$decay","_data$delayTime","_data$delayTime2","_data$delayTime3","_data$delayTime4","data","minValue","maxValue","_data$velocity","_data$velocity2","checkDestroy","updateOpacity","BounceOutMode","modes","outMode","includes","handled","plugin","plugins","particleBounce","bounds","calculateBounds","canvasSize","right","left","bounced","newVelocity","getValue","bounce","minPos","bounceHorizontal","bottom","top","bounceVertical","DestroyOutMode","_delta","outType","isPointInside","Vector","origin","moveCenter","vx","vy","remove","NoneOutMode","pRadius","OutOutMode","circVec","length","create","floor","newDx","newDy","atan2","wrap","warp","newPos","sizeValue","nextBounds","OutOfCanvasUpdater","_updateOutMode","updater","updaters","_outModes$bottom","_outModes$left","_outModes$right","_outModes$top","outModes","default","SizeUpdater","sizeAnimation","_particle$retina$size","sizeAnimationSpeed","_particle$size$maxLoo","_particle$size$maxLoo2","_particle$size$loops","_particle$size$maxLoo3","sizeVelocity","updateSize","async","loadBasic","refresh","arguments","addMover","loadBaseMover","addShape","loadCircleShape","addParticleUpdater","loadColorUpdater","loadOpacityUpdater","loadOutModesUpdater","loadSizeUpdater","ExternalInteractorBase","type","Attract","duration","easing","Attractor","super","_clickAttract","attract","finish","count","clicking","mousePos","interactivity","mouse","clickPosition","attractRadius","attractModeDistance","_processAttract","Circle","_hoverAttract","area","attractOptions","actualOptions","query","quadTree","p","attractFactor","getEasing","normVec","subFrom","_engine","handleClickMode","mode","setTo","initialVelocity","setTimeout","clear","interact","mouseMoveStatus","mouseMoveEvent","events","hoverEnabled","onHover","hoverMode","clickEnabled","onClick","clickMode","isInArray","_particle$interactivi","loadModeOptions","_len","sources","Array","_key","source","Bounce","Bouncer","_processBounce","circleBounce","circleBounceDataFromParticle","mass","Rectangle","rectBounce","_processMouseBounce","tolerance","bounceModeDistance","_singleSelectorBounce","div","querySelectorAll","forEach","item","elem","offsetLeft","offsetWidth","offsetTop","offsetHeight","divs","onDiv","divModeExecute","isDivModeEnabled","BubbleBase","mix","sourceColor","isArray","executeOnSingleOrMultiple","OptionsColor","BubbleDiv","selectors","ids","t","concat","Bubble","tmp","calculateBubbleValue","particleValue","modeValue","optionsValue","ratio","Bubbler","_clickBubble","mouseClickPos","bubbleOptions","bubble","bubbleModeDistance","queryCircle","_particle$opacity$val","_particle$opacity","durationEnd","distMouse","timeSpent","Date","getTime","clickTime","sizeData","bubbleObj","optValue","bubbleModeSize","particlesObj","_process","opacityData","_hoverBubbleColor","_hoverBubble","pointDistance","_hoverBubbleSize","_hoverBubbleOpacity","mouseLeaveEvent","divBubble","finalColor","modeColor","bubbleColor","itemFromSingleOrMultiple","pColor","getFillColor","rgbToHsl","colorMix","_divBubble$opacity","_options$interactivit","_particle$opacity$val2","_particle$opacity2","modeOpacity","optOpacity","modeSize","optSize","bubbleParam","bubbleDuration","bubbleDistance","particlesParam","pObjBubble","pObj","_singleSelectorHover","repulseRadius","contains","divMode","force","ConnectLinks","Connect","lineLinked","line_linked","_ref","_data$links","lineStyle","ctx","p1","p2","connectOptions","connect","gradStop","color1","color2","sourcePos","destPos","midRgb","grad","createLinearGradient","addColorStop","getStyleFromHsl","getStyleFromRgb","gradient","drawConnection","_p1$retina$linksWidth","ls","pos1","pos2","begin","end","drawLine","lineWidth","strokeStyle","stroke","drawConnectLine","linksWidth","Connector","connectModeDistance","connectModeRadius","i","slice","distMax","xDiff","yDiff","GrabLinks","blink","consent","Grab","drawGrab","lineColor","_particle$retina$link","beginPos","colorLine","drawGrabLine","Grabber","grab","grabModeDistance","_grabLineOptions$colo","_particle$options$lin","grabLineOptions","lineOpacity","opacityLine","optColor","grabLineColor","linksOptions","getLinkRandomColor","getLinkColor","Pauser","getAnimationStatus","Push","groups","quantity","particles_nb","setRangeValue","_data$quantity","Pusher","pushOptions","push","group","itemFromArray","groupOptions","Remove","Remover","removeNb","removeQuantity","RepulseBase","RepulseDiv","Repulse","Repulser","_clickRepulse","repulseOptions","repulse","repulseDistance","repulseModeDistance","pow","range","d","vect","_hoverRepulse","_processRepulse","divRepulse","_divRepulse$speed","repulseFactor","_singleSelectorRepulse","repulseOpts","hover","click","Slow","Slower","slowModeRadius","slowOptions","particlePos","dist","proximityFactor","InterlaceOffsets","InterlaceSteps","ByteStream","bytes","Uint8ClampedArray","getString","reduce","acc","curr","String","fromCharCode","nextByte","nextTwoBytes","readSubBlocks","blockString","readSubBlocksBin","len","blockData","Uint8Array","skipSubBlocks","parseColorTable","byteStream","colors","r","g","b","parseBlock","gif","avgAlpha","getFrameIndex","getTransparencyIndex","progressCallback","frame","frames","packedByte","localColorTableFlag","interlacedFlag","sortFlag","reserved","localColorCount","localColorTable","getColor","index","globalColorTable","a","image","ImageData","colorSpace","error","DOMException","name","EvalError","minCodeSize","imageData","clearCode","readBits","bytePos","bitPos","code","dic","pass","pixelPos","lineIndex","last","bitmap","createImageBitmap","parseImageBlock","GCreserved","disposalMethod","userInputDelayFlag","transparencyFlag","transparencyIndex","applicationExtension","identifier","authenticationCode","applicationExtensions","comments","plainTextData","charSize","foregroundColor","backgroundColor","text","parseExtensionBlock","currentColorRegex","loadImage","Promise","resolve","loading","img","Image","element","addEventListener","getLogger","errorPrefix","src","loadGifImage","_getGIFLoopAmount","gifData","gifURL","res","fetch","ok","buffer","arrayBuffer","totalTime","colorRes","pixelAspectRatio","backgroundImage","globalColorTableFlag","globalColorCount","backgroundColorIndex","copyWithin","frameIndex","incrementFrameIndex","getframeIndex","increment","newValue","Infinity","message","decodeGIF","gifLoopCount","extension","NaN","getGIFLoopAmount","_unused","downloadSvgImage","response","svgData","replaceImageColor","_imageData$replaceCol","svgColoredData","imageShape","colorStyle","preFillIndex","indexOf","substring","replaceColorSvg","imageRes","_objectSpread","loaded","replaceColor","replace_color","svg","Blob","domUrl","URL","webkitURL","url","createObjectURL","revokeObjectURL","img2","ImageDrawer","loadImageShape","_imageShape$replaceCo","addImage","images","globalAlpha","_particle$gifFrame","offscreenCanvas","OffscreenCanvas","offscreenContext","getContext","_image$gifLoopCount","imageSmoothingQuality","imageSmoothingEnabled","clearRect","gifFrame","gifTime","scale","drawImage","putImageData","previousImageData","getImageData","preload","loadShape","shape","find","_ref2","_imageData$fill","_imageData$close","_image$ratio","fill","close","Preload","ImagePreloaderPlugin","getPlugin","loadOptions","preloadOptions","existing","needsPlugin","_data$gif","_data$name","imageFunc","_data$name2","addLoadImageToEngine","preloader","addPlugin","LifeDelay","ValueWithRandom","LifeDuration","random","minimumValue","Life","delay","LifeUpdater","lifeOptions","life","justSpawned","widthRange","heightRange","LineDrawer","_shapeData$cap","moveTo","lineTo","lineCap","cap","ParallaxMover","isSsr","parallax","parallaxOptions","parallaxForce","canvasCenter","parallaxSmooth","smooth","centerDistance","ParticlesInteractorBase","_p1$retina$attractDis","attractDistance","rotate","ax","ay","p1Factor","p2Factor","updateAbsorb","r1","r2","collisions","absorb","fixBounceSpeed","collisionMaxSpeed","resolveCollision","unbreakable","Collider","radius1","radius2","round","z","CircleWarp","point","intersects","rect","circle","biggerCircle","rectSW","LinksShadow","blur","LinksTriangle","frequency","Links","shadow","triangles","getLinkDistance","optDistance","absDiffs","warpDistances","sqrt","Linker","_setColor","linkContainer","linkColor","linksColor","linksColors","get","Map","_p1$retina$linksDista","linkOpt1","linksDistance","linkOpt2","some","destination","loadParticlesOptions","_source$links","setLinkFrequency","dictionary","key","sort","join","LinkInstance","_drawLinkLine","link","p1LinksOptions","_p1$options$twinkle","twinkle","lines","twinkleFreq","twinkleRgb","rangeColorToRgb","backgroundMask","params","drawn","pi1","pi2","endNE","d1","yi","endSW","d2","xi","endSE","d3","globalCompositeOperation","composite","shadowColor","shadowBlur","drawLinkLine","_drawLinkTriangle","link1","link2","_triangleOptions$opac","triangleOptions","p3","opacityTriangle","_p1$retina$linksDista2","pos3","colorTriangle","drawTriangle","fillStyle","drawLinkTriangle","_drawTriangles","p1Links","_options$links","_p2$options$links","_p2$links","vertices","filter","linkFreq","_getLinkFrequency","findIndex","vertex","_getTriangleFrequency","_freqs","drawParticle","particleCreated","particleDestroyed","LinksPlugin","loadParticlesLinksInteraction","addInteractor","loadLinksInteraction","loadLinksPlugin","PolygonDrawerBase","start","getCenter","side","getSidesData","sideCount","numerator","denominator","decimalSides","interiorAngleDegrees","interiorAngle","beginPath","translate","_polygon$sides","polygon","sides","nb_sides","PolygonDrawer","TriangleDrawer","loadPolygonShape","loadGenericPolygonShape","loadTriangleShape","RotateAnimation","Rotate","RotateUpdater","rotateOptions","pathRotation","rotateDirection","rotateAnimation","rotation","_particle$rotate$valu","_particle$rotate","_rotate$velocity","_rotate$decay","updateRotate","fixFactor","SquareDrawer","fixedRadius","fixedDiameter","StarDrawer","_particle$starInset","inset","starInset","_star$sides","star","_star$inset","StrokeColorUpdater","_stroke$opacity","_stroke$color","_rangeColorToHsl","strokeWidth","strokeOpacity","strokeAnimation","strokeHslColor","strokeColor","updateStrokeColor","validTypes","TextDrawer","_character$style","_character$weight","_character$font","character","textData","randomIndexData","style","weight","font","offsetX","fillText","strokeText","shapeOptions","promises","loadFont","all","loadSlim","loadParallaxMover","loadExternalAttractInteraction","loadExternalBounceInteraction","loadExternalBubbleInteraction","loadExternalConnectInteraction","loadExternalGrabInteraction","loadExternalPauseInteraction","loadExternalPushInteraction","loadExternalRemoveInteraction","loadExternalRepulseInteraction","loadExternalSlowInteraction","loadParticlesAttractInteraction","loadParticlesCollisionsInteraction","addEasing","loadEasingQuadPlugin","loadLineShape","loadSquareShape","loadStarShape","loadTextShape","loadLifeUpdater","loadRotateUpdater","loadStrokeColorUpdater","AnimationOptions","RangedAnimationOptions","startValue","Range","distPos","randomColorValue","midColorValue","colorManagers","addColorManager","manager","hue2rgb","q","stringToRgba","input","startsWith","stringPrefix","parseString","hexFixed","_","result","exec","parseInt","useIndex","isString","colorToRgb","handleRangeColor","getRandomRgbColor","stringToRgb","handleColor","rgb","g1","b1","hslToRgb","hsl","hslPercent","hslaToRgba","hsla","rgbResult","fixedMin","size1","size2","rgb1","rgb2","_p1$getFillColor","_p2$getFillColor","getStrokeColor","destColor","getHslFromAnimation","animationOptions","resColor","setColorAnimation","colorAnimation","initialValue","_random","easings","num","comp1","comp2","weight1","weight2","getRangeMin","isNumber","isBoolean","pointA","pointB","getParticleDirectionAngle","getParticleBaseVelocity","baseVelocity","collisionVelocity","v1","v2","m1","m2","calcExactPositionOrRandomFromSize","_data$position$x2","_data$position5","_data$position$y2","_data$position6","parseAlpha","endsWith","parseFloat","w","w2","h2","setTransformValue","newFactor","_factor$key","Canvas","_applyPostDrawUpdaters","_postDrawUpdaters","afterDraw","_applyPreDrawUpdaters","zOpacity","colorStyles","transform","_preDrawUpdaters","getColorStyles","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","_resizePlugins","resize","_getPluginParticleColors","fColor","sColor","_colorPlugins","particleFillColor","particleStrokeColor","_initCover","cover","coverRgb","coverColor","_coverColorStyle","_initStyle","_fullScreen","_originalStyle","deepExtend","_setFullScreenStyle","_resetOriginalStyle","setProperty","_initTrail","trail","trailFill","fillColor","_trailFill","reject","createElement","evt","_paintBase","baseColor","paintBase","_paintImage","paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","observe","attributes","originalStyle","_mutationObserver","priority","toString","_context","_generated","paint","stop","cb","_particle$getStrokeCo","pfColor","psColor","_particle$bubble$opac","_particle$strokeOpaci","zOpacityFactor","opacityRate","zStrokeOpacity","sizeRate","drawParticlePlugin","drawPlugin","obs","safeMutationObserver","records","record","attributeName","e","initUpdaters","initPlugins","background","elementStyle","backgroundPosition","backgroundRepeat","repeat","backgroundSize","loadCanvas","dataset","generatedAttribute","ariaHidden","newSize","oldSize","started","resizeFactor","windowResize","needsRefresh","updateActualOptions","setDensity","manageListener","event","handler","add","addOptions","passive","capture","removeOptions","removeEventListener","EventListeners","_doMouseTouchClick","_canPush","mouseInteractivity","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","matches","dark","light","theme","themes","auto","loadTheme","_handleVisibilityChange","pauseOnBlur","hidden","pageHidden","_handleWindowResize","_resizeTimeout","clearTimeout","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","pointerEvents","mouseMove","touchStartEvent","touchStart","touchMoveEvent","touchMove","touchEndEvent","touchEndClick","mouseUpEvent","mouseUp","mouseDownEvent","mouseDown","touchEnd","mouseLeave","touchCancelEvent","touchCancel","_manageListeners","detectType","detectsOn","mouseOutEvent","_canvasEl$parentEleme","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChangeEvent","visibilityChange","mediaMatch","safeMatchMedia","addListener","oldThemeChange","removeListener","themeChange","ResizeObserver","resizeEvent","_resizeObserver","unobserve","entries","target","_mouseDown","downPosition","_mouseTouchClick","inside","mousePosition","clickPositionValid","_mouseTouchMove","mouseEvent","clientRect","getBoundingClientRect","clientX","clientY","currentTarget","sourceRect","targetRect","canvasRect","offsetY","_mouseEvent$offsetX","_mouseEvent$offsetY","_mouseEvent$offsetX2","_mouseEvent$offsetY2","_canvasRect$left","_canvasRect$top","touchEvent","lastTouch","touches","_touchEnd","from","changedTouches","touch","_touches","delete","_touchEndClick","_touchStart","performance","now","addListeners","removeListeners","Background","BackgroundMaskCover","BackgroundMask","FullScreen","ClickEvent","DivEvent","elementId","_data$ids","Parallax","HoverEvent","ResizeEvent","Events","onclick","ondiv","onhover","_data$onClick","_data$onDiv","_data$onHover","Modes","interactors","interactor","Interactivity","detect_on","_data$detectsOn","ManualParticle","_data$position$x","_data$position$y","_data$position$mode","Responsive","ThemeDefault","Theme","ColorAnimation","HslAnimation","AnimatableColor","CollisionsAbsorb","CollisionsOverlap","retries","ParticlesBounceFactor","ParticlesBounce","Collisions","overlap","MoveAngle","MoveAttract","rotateX","rotateY","_data$rotate$x","_data$rotate","_data$rotate$y","_data$rotate2","MoveCenter","MoveGravity","MovePath","generator","MoveTrailFill","MoveTrail","OutModes","_data$bottom","_data$left","_data$right","_data$top","Spin","Move","straight","noise","out_mode","_data$outModes","_data$path","OpacityAnimation","opacity_min","Opacity","anim","_data$animation","ParticlesDensity","value_area","_data$width","_data$height","ParticlesNumber","density","limit","_data$limit","Shadow","charKey","charAltKey","imageKey","imageAltKey","polygonKey","polygonAltKey","Shape","mainKey","altKey","altOverride","_this$options$mainKey","itemIsArray","emptyValue","mainDifferentValues","altDifferentValues","_this$options$altKey","_this$options$charKey","custom","_this$options$imageKe","_this$options$polygon","_value","_data$options","_data$image","_this$options$shape","SizeAnimation","size_min","Size","Stroke","ZIndex","ParticlesOptions","_data$move$collisions","_data$move","_data$move2","_data$stroke","_data$shape","_this$groups$group","strokeToLoad","sourceOptionsArr","sourceOptions","_len2","_key2","Options","_findDefaultTheme","_this$themes$find","_importPreset","preset","getPreset","autoPlay","detectRetina","fpsLimit","manualParticles","pauseOnOutsideViewport","zLayers","backgroundMode","fps_limit","retina_detect","_data$detectRetina","_data$fpsLimit","_data$fullScreen","_this$_findDefaultThe","_this$_findDefaultThe2","optResponsive","existingTheme","optTheme","setResponsive","defaultOptions","responsiveOptions","screen","availWidth","setTheme","chosenTheme","clientDarkMode","defaultTheme","InteractionManager","_interactors","getInteractors","_externalInteractors","_particleInteractors","externalInteract","particlesInteract","fixOutMode","checkModes","diameter","coord","maxCoord","setCb","Particle","overrideOptions","_this","_calcPosition","tryCount","pluginPos","particlePosition","Vector3d","exactPosition","fixHorizontal","fixVertical","_checkOverlap","_calculateVelocity","copy","rad","radOffset","collisionsOptions","overlapOptions","_getRollColor","_this$roll$angle","roll","backColor","alter","backFactor","backSum","alterHsl","_initPosition","_this$options$move$ce","_this$options$move$ce2","zIndexValue","_loadShapeData","override","_this$bubble$color","getMass","_this$bubble$radius","_this$bubble$color2","_shapeData$fill","_shapeData$close","_drawer","ignoresResizeRatio","mainOptions","shapeType","overrideShapeType","getPathGenerator","addPath","initParticle","needsSort","lastZIndex","drawer","drawers","getShapeDrawer","sideCountFunc","mover","movers","isInsideCanvas","isVisible","Point","QuadTree","rectangle","capacity","_subdivide","_subs","_divided","_points","insert","sub","check","found","queryRectangle","qTreeRectangle","_applyDensity","manualCount","_options$number$densi","numberOptions","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","densityOptions","_pushParticle","initializer","pool","pop","_nextId","canAdd","_array","_zArray","dispatchEvent","warning","_removeParticle","zIdx","splice","_interactionManager","getMovers","getUpdaters","addManualParticles","addParticle","countToRemove","condition","particlesInitialization","pathGenerators","j","_groupOptions$number","nb","pushing","redraw","removeAt","deleted","particlesToDelete","Set","particleUpdate","checkDelete","has","zArray","Retina","devicePixelRatio","moveDistance","props","guardCheck","loadContainerOptions","defaultPathGenerator","Container","_intersectionManager","entry","isIntersecting","_nextFrame","_this$lastFrameTime","lastFrameTime","timestamp","initDelta","addLifeTime","alive","_delay","_duration","_lifeTime","_firstStart","_paused","_sourceOptions","_initialSourceOptions","_options","_eventListeners","IntersectionObserver","_intersectionObserver","addClickHandler","clickOrTouchHandler","posRetina","touched","touchMoved","touchStartHandler","touchMoveHandler","radiusX","radiusY","touchCancelHandler","keys","mainArr","idx","refreshTime","_drawAnimationFrame","requestAnimationFrame","export","supported","blob","shapes","getSupportedShapes","availablePlugins","getAvailablePlugins","particlesSetup","_currentTheme","cancelAnimationFrame","needsUpdate","setNoise","noiseOrGenerator","setPath","pathOrGenerator","isFunction","oldGenerator","_delayTimeout","HTMLElement","newMaxWidth","responsiveMaxWidth","EventDispatcher","_listeners","listener","arr","args","listeners","hasEventListener","removeAllEventListeners","getItemsFromInitializer","initializers","values","Plugins","_initializers","presets","initInteractor","addParticleMover","initMover","initUpdater","addPathGenerator","addPreset","presetKey","addShapeDrawer","types","Engine","_configs","_domArray","_eventDispatcher","_initialized","configs","config","version","addConfig","nameOrConfig","_nameOrConfig$name","interactorInitializer","moverInitializer","updaterInitializer","initOrRefresh","afterEffectOrRefresh","destroyOrRefresh","customDrawer","realInit","realAfterEffect","realDestroy","realRefresh","afterEffect","domItem","tagIdOrOptionsOrParams","loadFromArray","optionsOrIndex","obj","isParams","_loadParams","setJSON","_params$id","_params$element","fallback","json","getDataFromUrl","domContainer","getElementById","body","append","currentOptions","oldIndex","v","old","tagName","toLowerCase","existingCanvases","getElementsByTagName","appendChild","newItem","HslColorManager","_colorValue$hsl","_colorValue$hsl2","RgbColorManager","_colorValue$rgb","rgbColor","_colorValue$rgb2","rgbColorManager","hslColorManager","xOrCoords","clone","_logger","debug","console","info","log","verbose","warn","rectSideBounce","pSide","pOtherSide","rectSide","rectOtherSide","matchMedia","MutationObserver","array","fonts","arrayRandomIndex","areBoundsInside","sourceIsArray","destDict","findItemFromSingleOrMultiple","singleDivModeExecute","checkSelector","xVelocityDiff","yVelocityDiff","xDist","yDist","u1","u2","vFinal1","vFinal2","divBounds","resH","resV","valueRange","autoStatus","getPositionOrSize","positionOrSize","_objectWithoutProperties","_excluded","arg","Random","closePath","dimension","fillRect","_transform$a","_transform$b","_transform$c","_transform$d","_particle$strokeWidth","rotateData","transformData","c","setTransform","shadowOffsetX","shadowOffsetY","drawShape","drawShapeAfterEffect","val","deepCompare","obj1","obj2","excludeKeyFn","keys1","Object","keys2","value1","value2","deepCompareArrays","arr1","arr2","val1","val2","defaultId","Component","state","library","setState","shouldComponentUpdate","nextProps","_nextProps$options","_this$props$options","nextOptions","canvasClassName","className","componentDidUpdate","forceUpdate","componentDidMount","loadParticles","componentWillUnmount","render","React","_this$props$id","_this$props$options2","defaultProps","current","_updateFromAngle","coords3d","getLengthSq","distanceTo","distanceToSq","n","divTo","normalize","v3d"],"sourceRoot":""}